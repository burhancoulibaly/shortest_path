{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js\";\nimport React from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Auth Helpers/AuthHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst Authenticate = props => {\n  let history = useHistory();\n  const [login, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(AuthHelper.login);\n  const [signup, {\n    signupLoading,\n    signupError,\n    signupData\n  }] = useMutation(AuthHelper.signup);\n\n  if (error) {\n    console.log(error);\n    let formRef = document.getElementsByClassName(\"login\")[0];\n    console.log(formRef);\n    let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n    if (formRef && formRef.getElementsByClassName(\"error-paragraph\")) {\n      formRef.remove(errorParagraphRef);\n    }\n\n    let errorParagragh = document.createElement(\"P\");\n    let errorMessage = document.createTextNode(\"Unable to log you in at this time\");\n    errorParagragh.classList.add(\"error-paragraph\");\n    errorParagragh.appendChild(errorMessage);\n    formRef.appendChild(errorParagragh);\n    return null;\n  }\n\n  ;\n\n  if (loading) {\n    console.log(\"...loading\");\n  }\n\n  if (data) {\n    let formRef = document.getElementsByClassName(\"login\")[0];\n\n    if (data.login.response_type.includes(\"Error\")) {\n      console.log(formRef);\n      let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n      if (formRef && formRef.getElementsByClassName(\"error-paragraph\")) {\n        formRef.remove(errorParagraphRef);\n      }\n\n      let errorParagragh = document.createElement(\"P\");\n      let errorMessage = document.createTextNode(\"Invalid login credentials\");\n      errorParagragh.classList.add(\"error-paragraph\");\n      errorParagragh.appendChild(errorMessage);\n      formRef.appendChild(errorParagragh);\n      return null;\n    }\n\n    ;\n    return history.push('/home');\n  }\n\n  return generateButton();\n};\n\nconst LoginForm = props => {\n  const renderAuthenticateButton = loginOption => {\n    return /*#__PURE__*/React.createElement(Authenticate, {\n      loginOption: loginOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    });\n  };\n\n  if (props.loginOption === \"login\") {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      class: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"loginUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      class: \"form-control\",\n      id: \"loginUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"loginPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"loginPassword\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), renderAuthenticateButton(props.loginOption));\n  }\n\n  if (props.loginOption === \"signup\") {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      class: \"signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"signupUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      class: \"form-control\",\n      id: \"signupUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"signupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"signupEmail\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"signupPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"signupPassword1\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"signupPassword2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"signupPassword2\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }))), renderAuthenticateButton(props.loginOption));\n  }\n\n  if (props.loginOption === \"guest\") {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      class: \"guest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"guestUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      class: \"form-control\",\n      id: \"guestUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    })), renderAuthenticateButton(props.loginOption));\n  }\n};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginOption: \"login\"\n    };\n  }\n\n  renderForm() {\n    if (this.state.loginOption === \"login\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      });\n    } // register($username: String!, $email: String!, $password: String!)\n\n\n    if (this.state.loginOption === \"signup\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.loginOption === \"guest\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  onSubmit(e) {\n    console.log(e.target.form.elements);\n    return false;\n  }\n\n  selectLoginOption(e, loginOption) {\n    // see if this becomes a problem later\n    document.forms[0].reset();\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    allLoginButtons.forEach(button => {\n      button.classList.remove(\"active\");\n    });\n    e.target.closest(\"button\").classList.add(\"active\"); //React Re-renders when this.setState is called.\n\n    this.setState({\n      loginOption: loginOption\n    });\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, this.renderForm(), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"login-btn btn active\",\n      onClick: $event => this.selectLoginOption($event, `login`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"signup-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `signup`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"guest-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `guest`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }, \"Guest\")))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js"],"names":["React","AuthHelper","useLazyQuery","useMutation","useHistory","Authenticate","props","history","login","loading","error","data","signup","signupLoading","signupError","signupData","console","log","formRef","document","getElementsByClassName","errorParagraphRef","remove","errorParagragh","createElement","errorMessage","createTextNode","classList","add","appendChild","response_type","includes","push","generateButton","LoginForm","renderAuthenticateButton","loginOption","LoginPage","Component","constructor","state","renderForm","onSubmit","e","target","form","elements","selectLoginOption","forms","reset","allLoginButtons","childNodes","forEach","button","closest","setState","render","$event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Auth Helpers/AuthHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst Authenticate = (props) => {\n  let history = useHistory();\n  const [login, { loading, error, data }] = useLazyQuery(AuthHelper.login);\n  const [signup, { signupLoading, signupError, signupData }] = useMutation(AuthHelper.signup);\n\n  if(error){\n    \n\n    console.log(error);\n    let formRef = document.getElementsByClassName(\"login\")[0];\n    console.log(formRef);\n    let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n    if(formRef && formRef.getElementsByClassName(\"error-paragraph\")){\n      formRef.remove(errorParagraphRef);\n    }\n\n    let errorParagragh = document.createElement(\"P\");\n    let errorMessage = document.createTextNode(\"Unable to log you in at this time\");\n\n    errorParagragh.classList.add(\"error-paragraph\");\n    errorParagragh.appendChild(errorMessage);\n\n    formRef.appendChild(errorParagragh);\n\n    return null;\n  };\n\n  if(loading){\n    console.log(\"...loading\");\n  }\n\n  if(data){\n    let formRef = document.getElementsByClassName(\"login\")[0];\n\n    if(data.login.response_type.includes(\"Error\")){\n      console.log(formRef);\n      let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n      if(formRef && formRef.getElementsByClassName(\"error-paragraph\")){\n        formRef.remove(errorParagraphRef);\n      }\n\n      let errorParagragh = document.createElement(\"P\");\n      let errorMessage = document.createTextNode(\"Invalid login credentials\");\n\n      errorParagragh.classList.add(\"error-paragraph\");\n      errorParagragh.appendChild(errorMessage);\n\n      formRef.appendChild(errorParagragh);\n\n      return null;\n    };\n\n    return history.push('/home');\n  }\n\n  return generateButton();\n}\n\nconst LoginForm = (props) => {\n  const renderAuthenticateButton = (loginOption) => {\n    return(\n      <Authenticate \n        loginOption={loginOption}\n      />\n    )\n  }\n\n  if(props.loginOption === \"login\"){\n    return (\n      <form class=\"login\">\n        <div class=\"form-group\">\n          <label for=\"loginUsername\">Username</label>\n          <input type=\"username\" class=\"form-control\" id=\"loginUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"loginPassword\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"loginPassword\" placeholder=\"Password\"></input>\n        </div>\n        <br></br>\n        {renderAuthenticateButton(props.loginOption)}\n      </form>\n    );\n  }\n\n  if(props.loginOption === \"signup\"){\n    return (\n      <form class=\"signup\">\n        <div class=\"form-group\">\n          <label for=\"signupUsername\">Username</label>\n          <input type=\"username\" class=\"form-control\" id=\"signupUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"signupEmail\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"signupEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\"></input>\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div class=\"password\">\n          <div class=\"form-group\">\n            <label for=\"signupPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"signupPassword1\" placeholder=\"Password\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"signupPassword2\">Confirm Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"signupPassword2\" placeholder=\"Confirm Password\"></input>\n          </div>\n        </div>\n        {renderAuthenticateButton(props.loginOption)}\n      </form>\n    );\n  }\n\n  if(props.loginOption === \"guest\"){\n    return (\n      <form class=\"guest\">\n        <div class=\"form-group\">\n          <label for=\"guestUsername\">Username</label>\n          <input type=\"username\" class=\"form-control\" id=\"guestUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        {renderAuthenticateButton(props.loginOption)}\n      </form>\n    );\n  }\n}\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginOption: \"login\",\n    }\n  }\n\n  renderForm(){\n    if(this.state.loginOption === \"login\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n    // register($username: String!, $email: String!, $password: String!)\n    if(this.state.loginOption === \"signup\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n\n    if(this.state.loginOption === \"guest\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n  }\n\n  onSubmit(e){\n    console.log(e.target.form.elements);\n\n    return false;\n  }\n  \n  selectLoginOption(e, loginOption){\n    // see if this becomes a problem later\n    document.forms[0].reset();\n\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    \n    allLoginButtons.forEach((button) => {\n      button.classList.remove(\"active\");\n    });\n\n    e.target.closest(\"button\").classList.add(\"active\");\n\n    //React Re-renders when this.setState is called.\n    this.setState({\n      loginOption: loginOption\n    })\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div id=\"login-page\">\n        <div class=\"login-container\">\n\n          {/* Login form */}\n          {this.renderForm()}\n     \n          <div class=\"login-options\">\n            <button class=\"login-btn btn active\" onClick={($event) => this.selectLoginOption($event, `login`)}>\n              <h1>Login</h1>\n            </button>\n            <button class=\"signup-btn btn\" onClick={($event) => this.selectLoginOption($event, `signup`)}>\n              <h1>Sign Up</h1>\n            </button>\n            <button class=\"guest-btn btn\" onClick={($event) => this.selectLoginOption($event, `guest`)}>\n              <h1>Guest</h1>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}