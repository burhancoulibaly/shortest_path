{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Sandbox.css'; //TODO: Runs a little slow, find a way to optimize (possibly using hooks)\n\nfunction Square(props) {\n  let downFlag = false;\n  const [state, setState] = useState({\n    x: props.x,\n    y: props.y,\n    val: props.val,\n    type: props.itemType\n  });\n  useEffect(() => {\n    setState({ ...state,\n      val: props.val,\n      type: props.itemType\n    });\n  }, [props.val]); // const handleMouseDown = () => {\n  //     // props.squareClick(state.x,state.y);\n  //     // document.addEventListener('mouseover', handler);\n  //     // document.addEventListener('mouseup', handler);\n  // }\n\n  const handler = (e, x = null, y = null) => {\n    if (e.type === \"mousedown\") {\n      downFlag = true; // console.log(x,y);\n\n      props.squareClick(x, y);\n    }\n\n    if (e.type === \"mouseover\") {\n      if (downFlag) {\n        // console.log(x,y);\n        props.squareClick(x, y);\n      }\n    }\n\n    if (e.type === \"mouseup\") {\n      downFlag = false;\n    }\n  };\n\n  switch (state.type) {\n    case \"start\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `green` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      });\n\n    case \"wall\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `gray` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      });\n\n    case \"end\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `red` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      });\n\n    default:\n      break;\n  }\n}\n\nfunction Map(props) {\n  const [state, setState] = useState({\n    grid: new Array(25 * 50).fill({\n      val: false,\n      type: null\n    }),\n    itemType: \"start\"\n  });\n\n  const renderSquare = (x, y, val) => {\n    return /*#__PURE__*/React.createElement(Square, {\n      width: props.winDimensions.width / state.grid.length * (state.grid.length / state.grid[0].length) //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n      ,\n      height: Math.min(props.winDimensions.height / state.grid.length, props.winDimensions.width / state.grid.length * (state.grid.length / state.grid[0].length)),\n      x: x,\n      y: y,\n      val: val,\n      squareClick: (x, y) => handleClick(x, y),\n      itemType: state.itemType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const switchItemType = itemType => {\n    setState({ ...state,\n      itemType: itemType\n    });\n  };\n\n  const handleClick = (x, y) => {\n    switch (state.itemType) {\n      case \"start\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((row, j) => {\n            return row.map((col, i) => {\n              if (y === j && x === i) {\n                // console.log(x,y,col.type,state.itemType);\n                if (col.type === state.itemType || !col.type) {\n                  if (state.grid[y][x].val) {\n                    return { ...col,\n                      val: !state.grid[y][x].val,\n                      type: null\n                    };\n                  }\n\n                  return { ...col,\n                    val: !state.grid[y][x].val,\n                    type: \"start\"\n                  };\n                }\n              }\n\n              if (col.type == \"start\") {\n                return { ...col,\n                  val: false,\n                  type: null\n                };\n              }\n\n              return { ...col\n              };\n            });\n          })\n        }));\n        break;\n\n      case \"wall\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((row, j) => {\n            return row.map((col, i) => {\n              if (y === j && x === i) {\n                // console.log(x,y,col.type,state.itemType);\n                if (col.type === state.itemType || !col.type) {\n                  if (state.grid[y][x].val) {\n                    return { ...col,\n                      val: !state.grid[y][x].val,\n                      type: null\n                    };\n                  }\n\n                  return { ...col,\n                    val: !state.grid[y][x].val,\n                    type: \"wall\"\n                  };\n                }\n              }\n\n              return { ...col\n              };\n            });\n          })\n        }));\n        break;\n\n      case \"end\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((row, j) => {\n            return row.map((col, i) => {\n              if (y === j && x === i) {\n                // console.log(x,y,col.type,state.itemType);\n                if (col.type === state.itemType || !col.type) {\n                  if (state.grid[y][x].val) {\n                    return { ...col,\n                      val: !state.grid[y][x].val,\n                      type: null\n                    };\n                  }\n\n                  return { ...col,\n                    val: !state.grid[y][x].val,\n                    type: \"end\"\n                  };\n                }\n              }\n\n              return { ...col\n              };\n            });\n          })\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, state.grid.map((row, j) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-row\",\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, row.map((col, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid-col\",\n        key: j + i * state.grid.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 33\n        }\n      }, renderSquare(i, j, col.val));\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"start\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Start Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"wall\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"Wall Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"end\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"End Item\"));\n}\n\nfunction Sandbox() {\n  const [winDimensions, setWinDimensions] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight / 1.25\n  });\n  useEffect(() => {\n    const handleWinResize = () => {\n      setWinDimensions({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight / 1.25\n      });\n    };\n\n    window.addEventListener('resize', handleWinResize); // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n    return () => {\n      window.removeEventListener('resize', handleWinResize);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sandbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    winDimensions: winDimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js"],"names":["React","useState","useEffect","Square","props","downFlag","state","setState","x","y","val","type","itemType","handler","e","squareClick","width","height","backgroundColor","Map","grid","Array","fill","renderSquare","winDimensions","length","Math","min","handleClick","switchItemType","map","row","j","col","i","Sandbox","setWinDimensions","document","documentElement","clientWidth","clientHeight","handleWinResize","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\n\n//TODO: Runs a little slow, find a way to optimize (possibly using hooks)\nfunction Square(props) {\n    let downFlag = false;\n    const [state, setState] = useState({x: props.x, y: props.y, val: props.val, type: props.itemType});\n    useEffect(() => {\n        setState({\n            ...state,\n            val: props.val,\n            type: props.itemType\n        })\n    }, [props.val]);\n\n    // const handleMouseDown = () => {\n    //     // props.squareClick(state.x,state.y);\n\n    //     // document.addEventListener('mouseover', handler);\n\n    //     // document.addEventListener('mouseup', handler);\n    // }\n\n    const handler = (e, x=null, y=null) => {\n        if(e.type === \"mousedown\"){\n            downFlag = true;\n            // console.log(x,y);\n            props.squareClick(x,y);\n        }\n        \n        if(e.type === \"mouseover\"){\n            if(downFlag){\n                // console.log(x,y);\n                props.squareClick(x, y);\n            }\n        }\n\n        if(e.type === \"mouseup\"){\n            downFlag = false;\n        }\n    }\n\n    switch (state.type) {\n        case \"start\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `green` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n\n        case \"wall\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `gray` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n\n        case \"end\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `red` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n    \n        default:\n            break;\n    }\n}\n\nfunction Map(props) {\n    const [state, setState] = useState({\n        grid: new Array(25*50).fill({val: false, type: null}),\n        itemType: \"start\"\n    })\n    \n    const renderSquare = (x,y,val) => {\n        return (\n            <Square \n                width={(props.winDimensions.width / state.grid.length) * (state.grid.length/state.grid[0].length)}\n                //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n                height={Math.min((props.winDimensions.height /  state.grid.length), (props.winDimensions.width / state.grid.length) * (state.grid.length/state.grid[0].length))}\n                x={x}\n                y={y}\n                val={val}\n                squareClick={(x, y) => handleClick(x, y)}\n                itemType={state.itemType}\n            />\n        )\n    }\n    const switchItemType = (itemType) => {\n        setState({\n            ...state,\n            itemType: itemType\n        })\n    }\n\n\n\n    const handleClick = (x,y) => {\n        switch (state.itemType) {\n            case \"start\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((row, j) => {\n                            return row.map((col, i) => {\n                                if(y === j && x === i){\n                                    // console.log(x,y,col.type,state.itemType);\n                                    if(col.type === state.itemType || !col.type){\n                                        if(state.grid[y][x].val){\n                                            return {...col, val: !state.grid[y][x].val, type: null}\n                                        }\n\n                                        return {...col, val: !state.grid[y][x].val, type: \"start\"}\n                                    }\n                                }\n                                \n                                if(col.type == \"start\"){\n                                    return {...col, val: false, type: null}\n                                }\n\n                                return {...col}\n                            })\n                    })\n                }));\n                \n                break;\n\n            case \"wall\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((row, j) => {\n                            return row.map((col, i) => {\n                                if(y === j && x === i){\n                                    // console.log(x,y,col.type,state.itemType);\n                                    if(col.type === state.itemType || !col.type){\n                                        if(state.grid[y][x].val){\n                                            return {...col, val: !state.grid[y][x].val, type: null}\n                                        }\n\n                                        return {...col, val: !state.grid[y][x].val, type: \"wall\"}\n                                    }\n                                }\n        \n                                return {...col}\n                            })\n                    })\n                }));\n\n                break;\n\n            case \"end\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((row, j) => {\n                            return row.map((col, i) => {\n                                if(y === j && x === i){\n                                    // console.log(x,y,col.type,state.itemType);\n                                    if(col.type === state.itemType || !col.type){\n                                        if(state.grid[y][x].val){\n                                            return {...col, val: !state.grid[y][x].val, type: null}\n                                        }\n\n                                        return {...col, val: !state.grid[y][x].val, type: \"end\"}\n                                    }\n                                }\n        \n                                return {...col}\n                            })\n                    })\n                }));\n\n                break;\n        \n            default:\n                break;\n        }\n\n        return;\n    }\n    \n    return (\n        <div className=\"map\">\n            {}\n            {state.grid.map((row, j) => {\n                return(\n                    <div className=\"grid-row\" key={j}>\n                        {row.map((col, i) => {\n                            return(\n                                <div className=\"grid-col\" key={j+ (i* state.grid.length)}>\n                                    {renderSquare(i, j, col.val)}\n                                </div>\n                            ) \n                        })}\n                    </div>\n                )\n            })}\n            <button onClick={() => switchItemType(\"start\")}>Start Item</button>\n            <button onClick={() => switchItemType(\"wall\")}>Wall Item</button>\n            <button onClick={() => switchItemType(\"end\")}>End Item</button>\n        </div>\n    )\n}\n\nfunction Sandbox() {\n    const [winDimensions, setWinDimensions] = useState({ width: document.documentElement.clientWidth, height: document.documentElement.clientHeight/1.25 });\n\n    useEffect(() => {\n        const handleWinResize = () => {\n            setWinDimensions({\n                width: document.documentElement.clientWidth,\n                height: document.documentElement.clientHeight/1.25\n            })\n        }\n\n        window.addEventListener('resize', handleWinResize);\n\n        // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n        return () => {\n            window.removeEventListener('resize', handleWinResize);\n        };\n    })\n\n    return (\n        <div id=\"sandbox\">\n            <Map \n                winDimensions={winDimensions}\n            />\n        </div>\n    );\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}