{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Routes } from './Routes';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginOption: \"login\",\n      user: null\n    };\n  }\n\n  renderForm() {\n    return /*#__PURE__*/React.createElement(LoginForm, {\n      loginOption: this.state.loginOption,\n      onClick: $event => this.onSubmit($event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }\n\n  onSubmit(e) {\n    console.log(e.target.form.elements); // let query = AuthHelper.login(\"menz_couli\",\"worldwidmenz\");\n    // let user = useQuery(query);\n    // this.setState({\n    //   user: user\n    // })\n\n    return false;\n  }\n\n  selectLoginOption(e, loginOption) {\n    // see if this becomes a problem later\n    document.forms[0].reset();\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    allLoginButtons.forEach(button => {\n      button.classList.remove(\"active\");\n    });\n    e.target.closest(\"button\").classList.add(\"active\"); //React Re-renders when this.setState is called.\n\n    this.setState({\n      loginOption: loginOption\n    });\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, this.renderForm(), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"login-btn btn active\",\n      onClick: $event => this.selectLoginOption($event, `login`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"signup-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `signup`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"guest-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `guest`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Guest\")))));\n  }\n\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/index.js"],"names":["React","ReactDOM","Routes","App","serviceWorker","ApolloClient","InMemoryCache","client","uri","cache","render","document","getElementById","LoginPage","Component","constructor","props","state","loginOption","user","renderForm","$event","onSubmit","e","console","log","target","form","elements","selectLoginOption","forms","reset","allLoginButtons","getElementsByClassName","childNodes","forEach","button","classList","remove","closest","add","setState","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Routes } from './Routes'\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:3000/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginOption: \"login\",\n      user: null\n    }\n  }\n\n  renderForm(){\n    return (\n      <LoginForm \n        loginOption={this.state.loginOption}\n        onClick={($event) => this.onSubmit($event)}\n      />\n    );\n  }\n\n  onSubmit(e){\n    console.log(e.target.form.elements);\n    \n    // let query = AuthHelper.login(\"menz_couli\",\"worldwidmenz\");\n    // let user = useQuery(query);\n\n    // this.setState({\n    //   user: user\n    // })\n\n    return false;\n  }\n  \n  selectLoginOption(e, loginOption){\n    // see if this becomes a problem later\n    document.forms[0].reset();\n\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    \n    allLoginButtons.forEach((button) => {\n      button.classList.remove(\"active\");\n    });\n\n    e.target.closest(\"button\").classList.add(\"active\");\n\n    //React Re-renders when this.setState is called.\n    this.setState({\n      loginOption: loginOption\n    })\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div id=\"login-page\">\n        <div class=\"login-container\">\n\n          {/* Login form */}\n          {this.renderForm()}\n     \n          <div class=\"login-options\">\n            <button class=\"login-btn btn active\" onClick={($event) => this.selectLoginOption($event, `login`)}>\n              <h1>Login</h1>\n            </button>\n            <button class=\"signup-btn btn\" onClick={($event) => this.selectLoginOption($event, `signup`)}>\n              <h1>Sign Up</h1>\n            </button>\n            <button class=\"guest-btn btn\" onClick={($event) => this.selectLoginOption($event, `guest`)}>\n              <h1>Guest</h1>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}