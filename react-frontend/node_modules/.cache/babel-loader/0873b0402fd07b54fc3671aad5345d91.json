{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\n\nfunction Account() {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    error: mapsError,\n    data: mapsData\n  } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n\n  const [maps, setMaps] = useState();\n  useEffect(() => {\n    if (mapsError) {\n      console.log(mapsError);\n    }\n\n    if (mapsData) {\n      console.log(mapsData.getUsersMaps);\n      setMaps(maps => {\n        return mapsData.getUsersMaps;\n      });\n    }\n  }, [user, mapsError, mapsData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, user.username), maps && maps.map((map, index) => {\n    return /*#__PURE__*/React.createElement(Link, {\n      key: index,\n      to: {\n        pathname: \"/sandbox\",\n        state: {\n          userMap: map.map\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, map.name)));\n  }));\n}\n\nexport default Account;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js"],"names":["React","useEffect","useContext","useState","UserContext","useQuery","MapHelper","Link","Account","user","error","mapsError","data","mapsData","getUsersMaps","variables","username","maps","setMaps","console","log","map","index","pathname","state","userMap","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM;AAACC,IAAAA;AAAD,MAASP,UAAU,CAACE,WAAD,CAAzB;AACA,QAAM;AAAEM,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,MAAuCR,QAAQ,CAACC,SAAS,CAACQ,YAAX,EAAyB;AAC5EC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAEP,IAAI,CAACO;AADN;AADiE,GAAzB,CAArD,CAFiB,CAMb;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,SAAH,EAAa;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACD;;AAED,QAAGE,QAAH,EAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,YAArB;AAEAI,MAAAA,OAAO,CAAED,IAAD,IAAU;AAChB,eAAOJ,QAAQ,CAACC,YAAhB;AACD,OAFM,CAAP;AAGD;AACF,GAZQ,EAYN,CAACL,IAAD,EAAOE,SAAP,EAAkBE,QAAlB,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,iBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACO,QAAV,CAFJ,EAKGC,IAAI,IACHA,IAAI,CAACI,GAAL,CAAS,CAACA,GAAD,EAAMC,KAAN,KAAgB;AACvB,wBACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAEJ,GAAG,CAACA;AAAf;AAA9B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAG,CAACK,IAAT,CADJ,CADF,CADF;AAOD,GARD,CANJ,CADF;AAmBD;;AAED,eAAelB,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\n\nfunction Account() {\n  const {user} = useContext(UserContext);\n  const { error: mapsError, data: mapsData } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n  const [maps, setMaps] = useState(); \n\n\n\n  useEffect(() => {\n    if(mapsError){\n      console.log(mapsError);\n    }\n\n    if(mapsData){\n      console.log(mapsData.getUsersMaps);\n\n      setMaps((maps) => {\n        return mapsData.getUsersMaps;\n      })\n    }\n  }, [user, mapsError, mapsData]);\n\n  return (\n    <div id=\"account\">\n      {user &&\n        <h1>{user.username}</h1>\n      }\n\n      {maps && \n        maps.map((map, index) => {\n          return (\n            <Link key={index} to={{pathname: \"/sandbox\", state: { userMap: map.map }}}>\n              <div>\n                  <h3>{map.name}</h3>\n              </div>\n            </Link>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}