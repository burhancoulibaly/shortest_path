{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js\";\nimport React from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\n\nfunction Account() {\n  const {\n    user\n  } = useContext(UserContext);\n  const [maps, {\n    error: loginError,\n    data: loginData\n  }] = useLazyQuery(AuthHelper.login, {\n    fetchPolicy: \"network-only\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Account\"));\n}\n\nexport default Account;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js"],"names":["React","UserContext","useQuery","MapHelper","Account","user","useContext","maps","error","loginError","data","loginData","useLazyQuery","AuthHelper","login","fetchPolicy"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM;AAACC,IAAAA;AAAD,MAASC,UAAU,CAACL,WAAD,CAAzB;AACA,QAAM,CAACM,IAAD,EAAO;AAAEC,IAAAA,KAAK,EAAEC,UAAT;AAAqBC,IAAAA,IAAI,EAAEC;AAA3B,GAAP,IAAiDC,YAAY,CAACC,UAAU,CAACC,KAAZ,EAAmB;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAnB,CAAnE;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\n\nfunction Account() {\n  const {user} = useContext(UserContext);\n  const [maps, { error: loginError, data: loginData }] = useLazyQuery(AuthHelper.login, { fetchPolicy: \"network-only\" });\n\n  return (\n    <div id=\"account\">\n      <h1>Account</h1>\n    </div>\n  );\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}