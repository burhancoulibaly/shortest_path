{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Sandbox.css'; //TODO: Runs a little slow, find a way to optimize (possibly using hooks)\n\nfunction Square(props) {\n  let downFlag = false;\n  const [state, setState] = useState({\n    x: props.x,\n    y: props.y,\n    val: props.val\n  });\n  useEffect(() => {\n    setState({ ...state,\n      val: props.val\n    });\n  }, [props.val]);\n\n  document.onmouseover = () => {\n    downFlag = true;\n  };\n\n  document.onmouseover = () => {\n    if (downFlag) {\n      props.squareClick(state.x, state.y);\n    }\n  };\n\n  document.onmouseup = () => {\n    downFlag = false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${props.width}px`,\n      height: `${props.height}px`,\n      backgroundColor: props.val === true ? `gray` : `white`\n    },\n    className: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Map(props) {\n  const [state, setState] = useState({\n    grid: new Array(25).fill(false).map(() => new Array(50).fill({\n      val: false\n    }))\n  });\n\n  const renderSquare = (x, y, val) => {\n    return /*#__PURE__*/React.createElement(Square, {\n      width: props.winDimensions.width / state.grid.length * (state.grid.length / state.grid[0].length) //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n      ,\n      height: Math.min(props.winDimensions.height / state.grid.length, props.winDimensions.width / state.grid.length * (state.grid.length / state.grid[0].length)),\n      x: x,\n      y: y,\n      val: val,\n      squareClick: (e, x, y) => handleClick(e, x, y),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const handleClick = (e, x, y) => {\n    console.log(e.type);\n    setState(state => ({ ...state,\n      //state object is immutable so updates have to be done this way\n      grid: state.grid.map((row, j) => {\n        return row.map((col, i) => {\n          if (y === j && x === i) {\n            return { ...col,\n              val: !state.grid[y][x].val\n            };\n          }\n\n          return { ...col\n          };\n        });\n      })\n    }));\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, state.grid.map((row, j) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-row\",\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, row.map((col, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid-col\",\n        key: j + i * state.grid.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, renderSquare(i, j, col.val));\n    }));\n  }));\n}\n\nfunction Sandbox() {\n  const [winDimensions, setWinDimensions] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight / 1.25\n  });\n  useEffect(() => {\n    const handleWinResize = () => {\n      setWinDimensions({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight / 1.25\n      });\n    };\n\n    window.addEventListener('resize', handleWinResize); // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n    return () => {\n      window.removeEventListener('resize', handleWinResize);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sandbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    winDimensions: winDimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js"],"names":["React","useState","useEffect","Square","props","downFlag","state","setState","x","y","val","document","onmouseover","squareClick","onmouseup","width","height","backgroundColor","Map","grid","Array","fill","map","renderSquare","winDimensions","length","Math","min","e","handleClick","console","log","type","row","j","col","i","Sandbox","setWinDimensions","documentElement","clientWidth","clientHeight","handleWinResize","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\n\n//TODO: Runs a little slow, find a way to optimize (possibly using hooks)\nfunction Square(props) {\n    let downFlag = false;\n    const [state, setState] = useState({x: props.x, y: props.y, val: props.val});\n    useEffect(() => {\n        setState({\n            ...state,\n            val: props.val\n        })\n    }, [props.val]);\n\n    document.onmouseover = () => {\n        downFlag = true;\n    }\n\n    document.onmouseover = () => {\n        if(downFlag){\n            props.squareClick(state.x, state.y)\n        }\n    }\n\n    document.onmouseup = () => {\n        downFlag = false;\n    }\n\n    return (\n        <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `gray` : `white`}} className=\"square\">\n            \n        </div>\n    )\n}\n\nfunction Map(props) {\n    const [state, setState] = useState({\n        grid: new Array(25).fill(false).map(() => new Array(50).fill({val: false}))\n    })\n    \n    const renderSquare = (x,y,val) => {\n        return (\n            <Square \n                width={(props.winDimensions.width / state.grid.length) * (state.grid.length/state.grid[0].length)}\n                //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n                height={Math.min((props.winDimensions.height /  state.grid.length), (props.winDimensions.width / state.grid.length) * (state.grid.length/state.grid[0].length))}\n                x={x}\n                y={y}\n                val={val}\n                squareClick={(e, x, y) => handleClick(e, x, y)}\n            />\n        )\n    }\n\n    const handleClick = (e, x,y) => {\n        console.log(e.type)\n        setState(state => ({\n            ...state,\n            //state object is immutable so updates have to be done this way\n            grid: state.grid.map((row, j) => {\n                    return row.map((col, i) => {\n                        if(y === j && x === i){\n                            return {...col, val: !state.grid[y][x].val}\n                        }\n\n                        return {...col}\n                    })\n            })\n        }))\n        return;\n    }\n    \n    return (\n        <div className=\"map\">\n            {state.grid.map((row, j) => {\n                return(\n                    <div className=\"grid-row\" key={j}>\n                        {row.map((col, i) => {\n                            return(\n                                <div className=\"grid-col\" key={j+ (i* state.grid.length)}>\n                                    {renderSquare(i, j, col.val)}\n                                </div>\n                            ) \n                        })}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nfunction Sandbox() {\n    const [winDimensions, setWinDimensions] = useState({ width: document.documentElement.clientWidth, height: document.documentElement.clientHeight/1.25 });\n\n    useEffect(() => {\n        const handleWinResize = () => {\n            setWinDimensions({\n                width: document.documentElement.clientWidth,\n                height: document.documentElement.clientHeight/1.25\n            })\n        }\n\n        window.addEventListener('resize', handleWinResize);\n\n        // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n        return () => {\n            window.removeEventListener('resize', handleWinResize);\n        };\n    })\n\n    return (\n        <div id=\"sandbox\">\n            <Map \n                winDimensions={winDimensions}\n            />\n        </div>\n    );\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}