{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js\";\nimport React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nconst [redirectHistory, setRedirectHistory] = useState(); //Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\n\nconst RouteGuard = ({\n  component: Component,\n  user,\n  logout,\n  updateUser,\n  ...rest\n}) => {\n  /*#__PURE__*/\n  React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      console.log(props);\n\n      switch (props.history.location.pathname) {\n        //If user is logged in trying to access the login page they get redirected to home page\n        case \"/login\":\n          return !user ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            logout: logout,\n            updateUser: updateUser,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 27\n            }\n          })) : /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/home\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 27\n            }\n          });\n        //If user is not logged in they get redirected to login page\n\n        default:\n          return user ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 27\n            }\n          })) : /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/login\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 27\n            }\n          });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default RouteGuard;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js"],"names":["React","useState","Route","Redirect","redirectHistory","setRedirectHistory","RouteGuard","component","Component","user","logout","updateUser","rest","props","console","log","history","location","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,EAAtD,C,CAEA;AACA;;AACA,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,UAAtC;AAAmD,KAAGC;AAAtD,CAAD,KAAiE;AAChF;AAAA,sBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAIC,KAAD,IAAW;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,cAAQA,KAAK,CAACG,OAAN,CAAcC,QAAd,CAAuBC,QAA/B;AACI;AACA,aAAK,QAAL;AACI,iBACI,CAACT,IAAD,gBACM,oBAAC,SAAD,oBACMI,KADN;AAEE,YAAA,MAAM,EAAEH,MAFV;AAGE,YAAA,UAAU,EAAEC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADN,gBAMM,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPV;AAUJ;;AACA;AACI,iBACIF,IAAI,gBACE,oBAAC,SAAD,oBACMI,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,gBAIE,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALV;AAfR;AAuBH,KAzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BH,CA3BD;;AA6BA,eAAeP,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst [redirectHistory, setRedirectHistory] = useState();\n\n//Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\nconst RouteGuard = ({ component: Component, user, logout, updateUser,  ...rest}) => {\n    <Route {...rest} render={((props) => {\n        console.log(props)\n        switch (props.history.location.pathname){\n            //If user is logged in trying to access the login page they get redirected to home page\n            case \"/login\":\n                return (\n                    !user\n                        ? <Component \n                            {...props}\n                            logout={logout}\n                            updateUser={updateUser} \n                          />\n                        : <Redirect to='/home' />\n                )\n            \n            //If user is not logged in they get redirected to login page\n            default:\n                return (\n                    user\n                        ? <Component \n                            {...props}\n                          />\n                        : <Redirect to='/login' />\n                )\n        }\n    })} />\n}\n\nexport default RouteGuard;"]},"metadata":{},"sourceType":"module"}