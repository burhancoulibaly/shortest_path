{"ast":null,"code":"class Stack {\n  constructor(_node = null) {\n    this.top = () => {\n      return this._stack[this._stack.length - 1];\n    };\n\n    this.length = () => {\n      return this._stack.length;\n    };\n\n    this.getStack = () => {\n      return this._stack;\n    };\n\n    this.push = node => {\n      return this._stack.push(node);\n    };\n\n    this.pop = () => {\n      return this._stack.pop();\n    };\n\n    this.isEmpty = () => {\n      if (this._stack.length > 0) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this._stack = [];\n\n    if (_node === null) {\n      return;\n    }\n\n    this._stack.push(_node);\n\n    return;\n  }\n\n}\n\nexport default Stack;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Algorithms/Stack.js"],"names":["Stack","constructor","node","top","_stack","length","getStack","push","pop","isEmpty"],"mappings":"AAAA,MAAMA,KAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,KAAI,GAAC,IAAN,EAAW;AAAA,SAYtBC,GAZsB,GAYhB,MAAM;AACR,aAAO,KAAKC,MAAL,CAAY,KAAKA,MAAL,CAAYC,MAAZ,GAAmB,CAA/B,CAAP;AACH,KAdqB;;AAAA,SAgBtBA,MAhBsB,GAgBb,MAAM;AACX,aAAO,KAAKD,MAAL,CAAYC,MAAnB;AACH,KAlBqB;;AAAA,SAoBtBC,QApBsB,GAoBX,MAAM;AACb,aAAO,KAAKF,MAAZ;AACH,KAtBqB;;AAAA,SAwBtBG,IAxBsB,GAwBdL,IAAD,IAAU;AACb,aAAO,KAAKE,MAAL,CAAYG,IAAZ,CAAiBL,IAAjB,CAAP;AACH,KA1BqB;;AAAA,SA4BtBM,GA5BsB,GA4BhB,MAAM;AACR,aAAO,KAAKJ,MAAL,CAAYI,GAAZ,EAAP;AACH,KA9BqB;;AAAA,SAgCtBC,OAhCsB,GAgCZ,MAAM;AACZ,UAAG,KAAKL,MAAL,CAAYC,MAAZ,GAAqB,CAAxB,EAA0B;AACtB,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH,KAtCqB;;AAClB,SAAKD,MAAL,GAAc,EAAd;;AAEA,QAAGF,KAAI,KAAK,IAAZ,EAAiB;AACb;AACH;;AAED,SAAKE,MAAL,CAAYG,IAAZ,CAAiBL,KAAjB;;AAEA;AACH;;AAXM;;AA0CX,eAAeF,KAAf","sourcesContent":["class Stack{\n    constructor(node=null){\n        this._stack = [];\n\n        if(node === null){\n            return;\n        }\n\n        this._stack.push(node);\n\n        return;\n    }\n\n    top = () => {\n        return this._stack[this._stack.length-1];\n    }\n\n    length = () => {\n        return this._stack.length;\n    }\n\n    getStack = () => {\n        return this._stack;\n    }\n\n    push = (node) => {\n        return this._stack.push(node);\n    }\n\n    pop = () => {\n        return this._stack.pop();\n    }\n\n    isEmpty = () => {\n        if(this._stack.length > 0){\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Stack;"]},"metadata":{},"sourceType":"module"}