{"ast":null,"code":"// import React, { useState, useEffect, useContext } from 'react';\n// import './LoginPage.css';\n// import AuthHelper from '../Auth Helpers/AuthHelper';\n// import { useLazyQuery, useMutation } from '@apollo/client';\n// import { Redirect } from 'react-router-dom'\n// import UserContext from \"../UserContext\";\n// //Todo move this function to its own file\n// //Returns login form based on login tab\n// const LoginForm = (props) => {\n//   if(props.loginTab === \"login\"){\n//     return (\n//       <form className=\"login\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to log you in at this time</p>}\n//         {props.loginState === \"invalid-login\" && <p className=\"error\">Invalid login credentials</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"loginUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"loginUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"loginPassword\">Password</label>\n//           <input type=\"password\" className=\"form-control\" id=\"loginPassword\" placeholder=\"Password\"></input>\n//         </div>\n//         <br></br>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.login(\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//                 password: e.target.form.elements[1].value\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`, `\"${e.target.form.elements[1].value}\"`),\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n//   if(props.loginTab === \"signup\"){\n//     return (\n//       <form className=\"signup\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to register you in at this time</p>}\n//         {props.loginState === \"existing-account\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-email\" && <p className=\"error\">Username required</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"signupUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"signupUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"signupEmail\">Email address</label>\n//           <input type=\"email\" className=\"form-control\" id=\"signupEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\"></input>\n//           <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n//         </div>\n//         <div className=\"password\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"signupPassword1\">Password</label>\n//             <input type=\"password\" className=\"form-control\" id=\"signupPassword1\" placeholder=\"Password\"></input>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"signupPassword2\">Confirm Password</label>\n//             <input type=\"password\" className=\"form-control\" id=\"signupPassword2\" placeholder=\"Confirm Password\"></input>\n//           </div>\n//         </div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.signup(\n//             //have this call a function beforehand here to validate passwords and form elements\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//                 email: e.target.form.elements[1].value,\n//                 password: e.target.form.elements[2].value\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`, `\"${e.target.form.elements[1].value}\"`),\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n//   if(props.loginTab === \"guest\"){\n//     return (\n//       <form className=\"guest\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to log you in at this time</p>}\n//         {props.loginState === \"invalid-login\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-account\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-email\" && <p className=\"error\">Username required</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"guestUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"guestUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.guest(\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`,\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n// };\n// function LoginPage(props) {\n//   //Login tab state variable\n//   const [user, setUser] = useContext(UserContext);\n//   const [loginTab, setLoginTab] = useState(\"login\");\n//   const [loginState, setLoginState] = useState(\"\");\n//   const [login, { error: loginError, data: loginData }] = useLazyQuery(AuthHelper.login, { fetchPolicy: \"network-only\" });\n//   const [guest, { error: guestError, data: guestData }] = useMutation(AuthHelper.guest);\n//   const [signup, { error: signupError, data: signupData }] = useMutation(AuthHelper.signup);\n//   //Only rerenders on changes\n//   useEffect(() => { \n//     // <--------------------------------GUEST--------------------------------> \n//     if(guestError){\n//       console.log(guestError);\n//       props.updateUser(guestError, setUser);\n//       props.logout(setUser);\n//       setLoginState(\"system-error\");\n//       return;\n//     };\n//     if(guestData){\n//       if(!guestData.guest.response_type.includes(\"Error\")){\n//         // console.log(guestData.guest);\n//         props.updateUser(guestData.guest, setUser);\n//         setLoginState(\"success\");\n//         return;\n//       };\n//       console.log(guestData);\n//       props.updateUser(guestData, setUser);\n//       props.logout(setUser);\n//       return;\n//     };\n//     // <--------------------------------SIGNUP-------------------------------->\n//     if(signupError){\n//       console.log(signupError);\n//       props.updateUser(signupError, setUser);\n//       props.logout(setUser);\n//       setLoginState(\"system-error\");\n//       return;\n//     };\n//     if(signupData){\n//       if(!signupData.register.response_type.includes(\"Error\")){\n//         // console.log(signupData.register);\n//         props.updateUser(signupData.register, setUser);\n//         setLoginState(\"success\");\n//         return;\n//       };\n//       console.log(signupData);\n//       props.updateUser(signupData, setUser);\n//       props.logout(setUser);\n//       return;\n//     };\n//     // <--------------------------------LOGIN-------------------------------->\n//     if(loginError){\n//       console.log(loginError);\n//       props.updateUser(loginError, setUser);\n//       props.logout(setUser);\n//       setLoginState(\"system-error\");\n//       return;\n//     };\n//     if(loginData){\n//       if(!loginData.login.response_type.includes(\"Error\")){\n//         // console.log(loginData.login);\n//         props.updateUser(loginData.login, setUser);\n//         setLoginState(\"success\");\n//         return;\n//       };\n//       console.log(loginData.login);\n//       props.updateUser(loginData.login, setUser);\n//       props.logout(setUser);\n//       setLoginState(\"invalid-login\");\n//       return;\n//     };\n//   }, [loginError, loginData, signupError, signupData, guestError, guestData, setUser, props])\n//   // <--------------------------------RENDERFORM-------------------------------->\n//   const renderForm = () => {\n//     return (\n//       <LoginForm \n//         loginTab={loginTab}\n//         loginState={loginState}\n//         login={login}\n//         signup={signup}\n//         guest={guest}\n//       />\n//     )\n//   }\n//   //Change login window tab\n//   const changeLoginTab = (e, loginOption) => {\n//     // see if this becomes a problem later\n//     document.forms[0].reset();\n//     setLoginState(\"\");\n//     let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n//     allLoginButtons.forEach((button) => {\n//       button.classList.remove(\"active\");\n//     });\n//     e.target.closest(\"button\").classList.add(\"active\");\n//     return loginOption;\n//   }\n//   // <--------------------------------HTML-------------------------------->\n//   if(loginState === \"success\"){\n//     return <Redirect to='/home' />\n//   }\n//   if(user){\n//     if(props.location.state){\n//       if(props.location.state.from.pathname === \"/login\"){\n//         return <Redirect to=\"/home\" />\n//       }\n//       return <Redirect to={props.location.state.from.pathname} />\n//     }\n//   }\n//   return (\n//     <div id=\"login-page\">\n//       <div className=\"login-container\">\n//         <div className=\"login-form\">\n//           {/* Login form */}\n//           {renderForm()}\n//           <div className=\"login-options\">\n//             <button className=\"login-btn btn active\" onClick={($event) => setLoginTab(changeLoginTab($event, `login`))}>\n//               <h1>Login</h1>\n//             </button>\n//             <button className=\"signup-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `signup`))}>\n//               <h1>Sign Up</h1>\n//             </button>\n//             <button className=\"guest-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `guest`))}>\n//               <h1>Guest</h1>\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default LoginPage;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect, useContext } from 'react';\n// import './LoginPage.css';\n// import AuthHelper from '../Auth Helpers/AuthHelper';\n// import { useLazyQuery, useMutation } from '@apollo/client';\n// import { Redirect } from 'react-router-dom'\n// import UserContext from \"../UserContext\";\n\n// //Todo move this function to its own file\n// //Returns login form based on login tab\n// const LoginForm = (props) => {\n//   if(props.loginTab === \"login\"){\n//     return (\n//       <form className=\"login\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to log you in at this time</p>}\n//         {props.loginState === \"invalid-login\" && <p className=\"error\">Invalid login credentials</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"loginUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"loginUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"loginPassword\">Password</label>\n//           <input type=\"password\" className=\"form-control\" id=\"loginPassword\" placeholder=\"Password\"></input>\n//         </div>\n//         <br></br>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.login(\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//                 password: e.target.form.elements[1].value\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`, `\"${e.target.form.elements[1].value}\"`),\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n\n//   if(props.loginTab === \"signup\"){\n//     return (\n//       <form className=\"signup\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to register you in at this time</p>}\n//         {props.loginState === \"existing-account\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-email\" && <p className=\"error\">Username required</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"signupUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"signupUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"signupEmail\">Email address</label>\n//           <input type=\"email\" className=\"form-control\" id=\"signupEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\"></input>\n//           <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n//         </div>\n//         <div className=\"password\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"signupPassword1\">Password</label>\n//             <input type=\"password\" className=\"form-control\" id=\"signupPassword1\" placeholder=\"Password\"></input>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"signupPassword2\">Confirm Password</label>\n//             <input type=\"password\" className=\"form-control\" id=\"signupPassword2\" placeholder=\"Confirm Password\"></input>\n//           </div>\n//         </div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.signup(\n//             //have this call a function beforehand here to validate passwords and form elements\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//                 email: e.target.form.elements[1].value,\n//                 password: e.target.form.elements[2].value\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`, `\"${e.target.form.elements[1].value}\"`),\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n\n//   if(props.loginTab === \"guest\"){\n//     return (\n//       <form className=\"guest\">\n//         {props.loginState === \"system-error\" && <p className=\"error\">Unable to log you in at this time</p>}\n//         {props.loginState === \"invalid-login\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-account\" && <p className=\"error\">Username required</p>}\n//         {props.loginState === \"existing-email\" && <p className=\"error\">Username required</p>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"guestUsername\">Username</label>\n//           <input type=\"username\" className=\"form-control\" id=\"guestUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n//         </div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={\n//             (e) => props.guest(\n//             {\n//               variables: {\n//                 username: e.target.form.elements[0].value,\n//               }\n//             },\n//             e.preventDefault(),\n//             // console.log(`\"${e.target.form.elements[0].value}\"`,\n//             )\n//           }>Submit</button>\n//       </form>\n//     );\n//   }\n// };\n\n// function LoginPage(props) {\n//   //Login tab state variable\n//   const [user, setUser] = useContext(UserContext);\n//   const [loginTab, setLoginTab] = useState(\"login\");\n//   const [loginState, setLoginState] = useState(\"\");\n//   const [login, { error: loginError, data: loginData }] = useLazyQuery(AuthHelper.login, { fetchPolicy: \"network-only\" });\n//   const [guest, { error: guestError, data: guestData }] = useMutation(AuthHelper.guest);\n//   const [signup, { error: signupError, data: signupData }] = useMutation(AuthHelper.signup);\n\n//   //Only rerenders on changes\n//   useEffect(() => { \n//     // <--------------------------------GUEST--------------------------------> \n//     if(guestError){\n//       console.log(guestError);\n\n//       props.updateUser(guestError, setUser);\n\n//       props.logout(setUser);\n  \n//       setLoginState(\"system-error\");\n\n//       return;\n//     };\n  \n//     if(guestData){\n//       if(!guestData.guest.response_type.includes(\"Error\")){\n//         // console.log(guestData.guest);\n\n//         props.updateUser(guestData.guest, setUser);\n        \n//         setLoginState(\"success\");\n\n//         return;\n//       };\n  \n//       console.log(guestData);\n\n//       props.updateUser(guestData, setUser);\n\n//       props.logout(setUser);\n      \n//       return;\n//     };\n\n\n//     // <--------------------------------SIGNUP-------------------------------->\n\n//     if(signupError){\n//       console.log(signupError);\n\n//       props.updateUser(signupError, setUser);\n\n//       props.logout(setUser);\n  \n//       setLoginState(\"system-error\");\n\n//       return;\n//     };\n  \n//     if(signupData){\n//       if(!signupData.register.response_type.includes(\"Error\")){\n//         // console.log(signupData.register);\n\n//         props.updateUser(signupData.register, setUser);\n        \n//         setLoginState(\"success\");\n\n//         return;\n//       };\n  \n//       console.log(signupData);\n\n//       props.updateUser(signupData, setUser);\n\n//       props.logout(setUser);\n      \n//       return;\n//     };\n\n\n//     // <--------------------------------LOGIN-------------------------------->\n  \n//     if(loginError){\n//       console.log(loginError);\n      \n//       props.updateUser(loginError, setUser);\n\n//       props.logout(setUser);\n      \n//       setLoginState(\"system-error\");\n\n//       return;\n//     };\n  \n//     if(loginData){\n//       if(!loginData.login.response_type.includes(\"Error\")){\n//         // console.log(loginData.login);\n        \n//         props.updateUser(loginData.login, setUser);\n\n//         setLoginState(\"success\");\n\n//         return;\n//       };\n\n  \n//       console.log(loginData.login);\n\n//       props.updateUser(loginData.login, setUser);\n\n//       props.logout(setUser);\n\n//       setLoginState(\"invalid-login\");\n\n//       return;\n//     };\n//   }, [loginError, loginData, signupError, signupData, guestError, guestData, setUser, props])\n\n\n//   // <--------------------------------RENDERFORM-------------------------------->\n\n//   const renderForm = () => {\n//     return (\n//       <LoginForm \n//         loginTab={loginTab}\n//         loginState={loginState}\n//         login={login}\n//         signup={signup}\n//         guest={guest}\n//       />\n//     )\n//   }\n\n//   //Change login window tab\n//   const changeLoginTab = (e, loginOption) => {\n//     // see if this becomes a problem later\n//     document.forms[0].reset();\n\n//     setLoginState(\"\");\n\n//     let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    \n//     allLoginButtons.forEach((button) => {\n//       button.classList.remove(\"active\");\n//     });\n\n//     e.target.closest(\"button\").classList.add(\"active\");\n\n//     return loginOption;\n//   }\n\n//   // <--------------------------------HTML-------------------------------->\n//   if(loginState === \"success\"){\n//     return <Redirect to='/home' />\n//   }\n\n//   if(user){\n//     if(props.location.state){\n//       if(props.location.state.from.pathname === \"/login\"){\n//         return <Redirect to=\"/home\" />\n//       }\n\n//       return <Redirect to={props.location.state.from.pathname} />\n//     }\n//   }\n\n//   return (\n//     <div id=\"login-page\">\n//       <div className=\"login-container\">\n//         <div className=\"login-form\">\n//           {/* Login form */}\n//           {renderForm()}\n          \n//           <div className=\"login-options\">\n//             <button className=\"login-btn btn active\" onClick={($event) => setLoginTab(changeLoginTab($event, `login`))}>\n//               <h1>Login</h1>\n//             </button>\n//             <button className=\"signup-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `signup`))}>\n//               <h1>Sign Up</h1>\n//             </button>\n//             <button className=\"guest-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `guest`))}>\n//               <h1>Guest</h1>\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;"]},"metadata":{},"sourceType":"module"}