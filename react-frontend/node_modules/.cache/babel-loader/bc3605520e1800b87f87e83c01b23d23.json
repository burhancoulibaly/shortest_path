{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Routes.js\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apolloClient from './ApolloConfig';\nimport LoginPage from './Login Page/LoginPage';\nimport Home from './Home/Home';\nimport App from './App/App';\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport UserContext from './UserContext';\n\nfunction Routes() {\n  const [user, setUser] = useState();\n  axios.interceptors.request.use(function (request) {\n    request.headers[\"authorization\"] = user.accessToken ? `Bearer ${user.accessToken}` : \"\";\n    return request;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  const value = useMemo(() => [user, setUser], [user, setUser]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/refreshToken\").then(res => res.json()).then(result => {\n      console.log(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 54\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/app\",\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: LoginPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })))));\n}\n\n;\nexport default Routes;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Routes.js"],"names":["React","useState","useMemo","useEffect","axios","apolloClient","LoginPage","Home","App","ApolloProvider","BrowserRouter","Router","Switch","Route","Redirect","UserContext","Routes","user","setUser","interceptors","request","use","headers","accessToken","error","Promise","reject","value","fetch","then","res","json","result","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AAEAG,EAAAA,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAASD,OAAT,EAAkB;AACdA,IAAAA,OAAO,CAACE,OAAR,CAAgB,eAAhB,IAAmCL,IAAI,CAACM,WAAL,GAAoB,UAASN,IAAI,CAACM,WAAY,EAA9C,GAAkD,EAArF;AACA,WAAOH,OAAP;AACH,GAJL,EAKI,UAASI,KAAT,EAAgB;AACZ,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAPL;AAUA,QAAMG,KAAK,GAAGzB,OAAO,CAAC,MAAO,CAACe,IAAD,EAAOC,OAAP,CAAR,EAA0B,CAACD,IAAD,EAAOC,OAAP,CAA1B,CAArB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AAEZyB,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KALL,EAMI;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACTS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,KAXL;AAaD,GAfM,EAeJ,EAfI,CAAT;AAiBA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEtB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,IAAd;AAAoB,IAAA,IAAI,EAAC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6B,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAEG,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,CADJ,CADJ;AAcH;;AAAA;AAED,eAAeU,MAAf","sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apolloClient from './ApolloConfig'\nimport LoginPage from './Login Page/LoginPage';\nimport Home from './Home/Home';\nimport App from './App/App'\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport UserContext from './UserContext';\n\nfunction Routes() {\n    const [user, setUser] = useState();\n\n    axios.interceptors.request.use(\n        function(request) {\n            request.headers[\"authorization\"] = user.accessToken ? `Bearer ${user.accessToken}` : \"\";\n            return request;\n        },\n        function(error) {\n            return Promise.reject(error);\n        }\n    );\n\n    const value = useMemo(() => ([user, setUser]), [user, setUser]);\n\n    useEffect(() => {\n        \n        fetch(\"http://localhost:3000/refreshToken\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              console.log(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              console.log(error);\n            }\n          )\n      }, [])\n\n    return (\n        <Router> \n            <UserContext.Provider value={value}>\n                <ApolloProvider client={apolloClient}>\n                    <Switch>\n                        <Route exact={true} path=\"/\"><Redirect to=\"/home\"/></Route>\n                        <Route path=\"/app\" component={App}/>\n                        <Route path=\"/home\" component={Home}/>\n                        <Route path=\"/login\" component={LoginPage}/>\n                    </Switch>\n                </ApolloProvider>\n            </UserContext.Provider>\n        </Router>\n    );\n};\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}