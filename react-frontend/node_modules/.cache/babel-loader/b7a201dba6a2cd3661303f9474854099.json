{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Menu/Menu.js\";\nimport React, { useContext, useState, useEffect, useRef, useCallback } from 'react';\nimport './Menu.css';\nimport MenuContext from \"../MenuContext\";\nimport UserContext from \"../UserContext\";\nimport Modal from 'react-bootstrap/Modal';\nimport InputValidationHelper from '../Helpers/InputValidationHelper';\n\nconst onAlgorithmChange = (algorithm, dispatch) => {\n  dispatch({\n    type: 'setAlgorithm',\n    payload: {\n      algorithm: algorithm\n    }\n  });\n};\n\nconst onHeuristicChange = (heuristic, dispatch) => {\n  dispatch({\n    type: 'setHeuristic',\n    payload: {\n      heuristic: heuristic\n    }\n  });\n};\n\nfunction SaveMapModal({\n  mapName,\n  handleSave,\n  ...props\n}) {\n  const [inputState, setInputState] = useState({\n    isMapNameValid: true,\n    mapNameErrorMessage: \"\"\n  });\n\n  const validateNameEdit = mapName => {\n    const isValid = InputValidationHelper.validateString(mapName);\n    console.log(isValid);\n    setInputState({ ...inputState,\n      isMapNameValid: isValid,\n      mapNameErrorMessage: isValid === false ? \"Invalid map name\" : \"\"\n    });\n\n    if (isValid) {\n      handleSave(mapName);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Set Map Name\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"savemap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mapname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Map Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: (!inputState.isMapNameValid ? \"error\" : \"\") + \" form-control\",\n    id: \"mapname\",\n    \"aria-describedby\": \"mapNameHelp\",\n    type: \"text\",\n    defaultValue: mapName[mapName.length - 1],\n    placeholder: \"Unamed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), !inputState.isMapNameValid && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }), inputState.mapNameErrorMessage, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => validateNameEdit(document.getElementsByClassName(\"savemap\")[0][0].value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Save\")));\n}\n\nfunction EditMapModal({\n  mapName,\n  handleNameEdit,\n  ...props\n}) {\n  const [inputState, setInputState] = useState({\n    isMapNameValid: true,\n    mapNameErrorMessage: null\n  });\n\n  const validateNameEdit = mapName => {\n    console.log(mapName);\n    const isValid = InputValidationHelper.validateString(mapName);\n    setInputState({ ...inputState,\n      isMapNameValid: isValid,\n      mapNameErrorMessage: isValid === false ? \"Invalid map name\" : \"\"\n    });\n\n    if (isValid) {\n      handleNameEdit(mapName);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Set Map Name\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"editmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mapname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Map Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: (!inputState.isMapNameValid ? \"error\" : \"\") + \" form-control\",\n    id: \"mapname\",\n    \"aria-describedby\": \"mapNameHelp\",\n    type: \"text\",\n    defaultValue: mapName[mapName.length - 1],\n    placeholder: \"Unamed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), !inputState.isMapNameValid && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }), inputState.mapNameErrorMessage, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => validateNameEdit(document.getElementsByClassName(\"editmap\")[0][0].value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Save Name\")));\n}\n\nfunction SaveMap({\n  mapName,\n  dispatch,\n  ...props\n}) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n    console.log(mapName);\n\n    if (mapName.length > 0) {\n      dispatch({\n        type: \"save\"\n      });\n    } else {\n      setModalShow(true);\n    }\n  };\n\n  const handleClose = useCallback(() => {\n    setModalShow(false);\n  }, [setModalShow]);\n\n  const handleSave = mapName => {\n    //change isEdit to true, after this is done\n    handleClose();\n    dispatch({\n      type: \"mapName\",\n      payload: {\n        mapName: mapName\n      }\n    });\n    dispatch({\n      type: \"save\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: (props.user.role === \"guest\" ? \"disabled\" : \"\") + \" btn btn-primary\",\n    disabled: props.user.role === \"guest\",\n    variant: \"primary\",\n    onClick: () => handleShow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(SaveMapModal, {\n    show: modalShow,\n    handleSave: mapName => handleSave(mapName),\n    mapName: mapName,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction EditMapName({\n  menuState,\n  dispatch,\n  ...props\n}) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n    setModalShow(true);\n  };\n\n  const handleClose = useCallback(() => {\n    setModalShow(false);\n  }, [setModalShow]);\n  const handleNameEdit = useCallback(mapName => {\n    handleClose();\n    dispatch({\n      type: \"mapName\",\n      payload: {\n        mapName: mapName\n      }\n    });\n  }, [handleClose, dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mapname\",\n    onClick: () => handleShow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, menuState.mapName.length > 0 ? menuState.mapName[menuState.mapName.length - 1] : \"Unamed\"), /*#__PURE__*/React.createElement(EditMapModal, {\n    show: modalShow,\n    handleNameEdit: mapName => handleNameEdit(mapName),\n    mapName: menuState.mapName,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Menu({\n  initialState,\n  ...props\n}) {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    menuState,\n    dispatch\n  } = useContext(MenuContext);\n  const resizeEvent = window.document.createEvent('UIEvents');\n  resizeEvent.initUIEvent('resize', true, false, window, 0);\n  window.dispatchEvent(resizeEvent);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sb-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sb-menu-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, user && /*#__PURE__*/React.createElement(EditMapName, {\n    user: user,\n    menuState: menuState,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itemType-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: (menuState.itemState === \"start\" ? \"selected\" : \"\") + \" btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'setItemState',\n      payload: {\n        itemState: \"start\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Start Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: (menuState.itemState === \"wall\" ? \"selected\" : \"\") + \" btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'setItemState',\n      payload: {\n        itemState: \"wall\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"Wall Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: (menuState.itemState === \"end\" ? \"selected\" : \"\") + \" btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'setItemState',\n      payload: {\n        itemState: \"end\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, \"End Item\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"algorithm-settings form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"algorithm\",\n    id: \"algorithm\",\n    value: menuState.algorithm,\n    onChange: e => onAlgorithmChange(e.currentTarget.value, dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"astar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, \"A*\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dijkstra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"Dijkstra\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bfs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"Breadth First Search\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dfs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, \"Depth First Search\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"greedybfs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, \"Greedy Best First Search\")), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    disabled: menuState.algorithm !== \"astar\" && menuState.algorithm !== \"greedybfs\",\n    name: \"hueristic\",\n    id: \"heuristic\",\n    value: menuState.heuristic,\n    onChange: e => onHeuristicChange(e.currentTarget.value, dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"manhattan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, \"Manhattan Distance\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"euclidean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, \"Euclidean Distance\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"path-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    checked: menuState.cutCorners,\n    id: \"cutCorners\",\n    type: \"checkbox\",\n    onChange: () => dispatch({\n      type: 'cutCorners'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"cutCorners\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, \"Cut Corners\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    checked: menuState.allowDiags,\n    id: \"allowDiags\",\n    type: \"checkbox\",\n    onChange: () => dispatch({\n      type: 'allowDiags'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"allowDiags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"Diagonals\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    disabled: menuState.algorithm === \"dfs\",\n    checked: menuState.biDirectional,\n    id: \"biDirectional\",\n    type: \"checkbox\",\n    onChange: () => dispatch({\n      type: 'biDirectional'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"biDirectional\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, \"Bi-Directional\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'pathClear'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, \"Clear Path\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'clear'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(SaveMap, {\n    user: user,\n    mapName: menuState.mapName,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'reset',\n      payload: {\n        init: initialState\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => dispatch({\n      type: 'run'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"Run\")));\n}\n\nexport default Menu;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Menu/Menu.js"],"names":["React","useContext","useState","useEffect","useRef","useCallback","MenuContext","UserContext","Modal","InputValidationHelper","onAlgorithmChange","algorithm","dispatch","type","payload","onHeuristicChange","heuristic","SaveMapModal","mapName","handleSave","props","inputState","setInputState","isMapNameValid","mapNameErrorMessage","validateNameEdit","isValid","validateString","console","log","length","document","getElementsByClassName","value","EditMapModal","handleNameEdit","SaveMap","modalShow","setModalShow","handleShow","handleClose","user","role","EditMapName","menuState","Menu","initialState","resizeEvent","window","createEvent","initUIEvent","dispatchEvent","itemState","e","currentTarget","cutCorners","allowDiags","biDirectional","init"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef, useCallback } from 'react';\nimport './Menu.css';\nimport MenuContext from \"../MenuContext\";\nimport UserContext from \"../UserContext\";\nimport Modal from 'react-bootstrap/Modal';\nimport InputValidationHelper from '../Helpers/InputValidationHelper';\n\nconst onAlgorithmChange = (algorithm, dispatch) => {\n    dispatch({type: 'setAlgorithm', payload: { algorithm: algorithm }})\n}\n\nconst onHeuristicChange = (heuristic, dispatch) => {\n    dispatch({type: 'setHeuristic', payload: { heuristic: heuristic }})\n}\n\nfunction SaveMapModal({mapName, handleSave, ...props}){\n    const [inputState, setInputState] = useState({\n        isMapNameValid: true,\n        mapNameErrorMessage: \"\",\n    })\n\n    const validateNameEdit = (mapName) => {\n        const isValid = InputValidationHelper.validateString(mapName);\n    \n        console.log(isValid)\n        setInputState({\n          ...inputState,\n          isMapNameValid: isValid,\n          mapNameErrorMessage: isValid === false ? \"Invalid map name\" : \"\"\n        })\n\n        if(isValid){\n            handleSave(mapName);\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Set Map Name\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form className=\"savemap\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"mapname\">Map Name</label>\n                        <input className={(!inputState.isMapNameValid ? \"error\" : \"\") + \" form-control\"} id=\"mapname\" aria-describedby=\"mapNameHelp\" type=\"text\" defaultValue={ mapName[mapName.length-1] } placeholder=\"Unamed\"/>\n                        {!inputState.isMapNameValid &&\n                            <div className=\"error-text\">\n                            <br></br>\n                            {inputState.mapNameErrorMessage}\n                            <br></br>\n                            </div> \n                        }\n                    </div>\n                </form>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-primary\" onClick={() => validateNameEdit(document.getElementsByClassName(\"savemap\")[0][0].value)}>Save</button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nfunction EditMapModal({mapName, handleNameEdit, ...props}){\n    const [inputState, setInputState] = useState({\n        isMapNameValid: true,\n        mapNameErrorMessage: null,\n    })\n\n    const validateNameEdit = (mapName) => {\n        console.log(mapName)\n        const isValid = InputValidationHelper.validateString(mapName);\n\n        setInputState({\n          ...inputState,\n          isMapNameValid: isValid,\n          mapNameErrorMessage: isValid === false ? \"Invalid map name\" : \"\"\n        })\n\n        if(isValid){\n            handleNameEdit(mapName);\n        }\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Set Map Name\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form className=\"editmap\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"mapname\">Map Name</label>\n                        <input className={(!inputState.isMapNameValid ? \"error\" : \"\") + \" form-control\"} id=\"mapname\" aria-describedby=\"mapNameHelp\" type=\"text\" defaultValue={ mapName[mapName.length-1] } placeholder=\"Unamed\"/>\n                        {!inputState.isMapNameValid &&\n                            <div className=\"error-text\">\n                            <br></br>\n                            {inputState.mapNameErrorMessage}\n                            <br></br>\n                            </div> \n                        }\n                    </div>\n                </form>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"btn btn-primary\" onClick={() => validateNameEdit(document.getElementsByClassName(\"editmap\")[0][0].value)}>Save Name</button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nfunction  SaveMap({mapName, dispatch, ...props}){\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const handleShow = () => {\n        console.log(mapName)\n        if(mapName.length > 0){\n            dispatch({type: \"save\"});\n        }else{\n            setModalShow(true);\n        }\n    }\n\n    const handleClose = useCallback(() => {\n        setModalShow(false);\n    }, [setModalShow])\n\n    const handleSave = (mapName) => {\n        //change isEdit to true, after this is done\n        handleClose();\n        dispatch({type: \"mapName\", payload: { mapName: mapName }});\n        dispatch({type: \"save\"});\n    }\n\n    return (\n        <>\n            <button className={(props.user.role === \"guest\" ? \"disabled\" : \"\") + \" btn btn-primary\"} disabled={props.user.role === \"guest\"} variant=\"primary\" onClick={() => handleShow()}>\n                Save\n            </button>\n\n            <SaveMapModal\n                show={modalShow}\n                handleSave={(mapName) => handleSave(mapName)}\n                mapName={mapName}\n                onHide={() => handleClose()}\n            />\n        </>\n    );\n}\n\nfunction  EditMapName({menuState, dispatch, ...props}){\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const handleShow = () => {\n        setModalShow(true);\n    }\n\n    const handleClose = useCallback(() => {\n        setModalShow(false);\n    }, [setModalShow])\n\n    const handleNameEdit = useCallback((mapName) => {\n        handleClose();\n        dispatch({type: \"mapName\", payload: { mapName: mapName }});\n    }, [handleClose, dispatch])\n\n    return (\n        <>\n            <h4 className=\"mapname\" onClick={() => handleShow()}>\n                {menuState.mapName.length > 0 ? menuState.mapName[menuState.mapName.length-1] : \"Unamed\"}\n            </h4>\n\n            <EditMapModal\n                show={modalShow}\n                handleNameEdit={(mapName) => handleNameEdit(mapName)}\n                mapName={menuState.mapName}\n                onHide={() => handleClose()}\n            />\n        </>\n    );\n}\n\nfunction Menu({initialState, ...props}){\n    const {user} = useContext(UserContext);\n    const {menuState, dispatch} = useContext(MenuContext);\n\n    const resizeEvent = window.document.createEvent('UIEvents'); \n    \n    resizeEvent.initUIEvent('resize', true, false, window, 0); \n    window.dispatchEvent(resizeEvent);\n\n    return (\n        <div className=\"sb-menu\">\n            <div className=\"sb-menu-container\">\n                <div>\n                    { user &&\n                        <EditMapName \n                            user={user}\n                            menuState={menuState}\n                            dispatch={dispatch}\n                        />\n                    }  \n                </div>\n                <div className=\"itemType-btns\">\n                    <button className={(menuState.itemState === \"start\" ? \"selected\" : \"\") + \" btn btn-primary\"} onClick={() => dispatch({type: 'setItemState', payload: { itemState: \"start\" }})}>Start Item</button>\n                    <button className={(menuState.itemState === \"wall\" ? \"selected\" : \"\") + \" btn btn-primary\"} onClick={() => dispatch({type: 'setItemState', payload: { itemState: \"wall\" }})}>Wall Item</button>\n                    <button className={(menuState.itemState === \"end\" ? \"selected\" : \"\") + \" btn btn-primary\"} onClick={() => dispatch({type: 'setItemState', payload: { itemState: \"end\" }})}>End Item</button>\n                </div>\n                <div className=\"algorithm-settings form-group\">\n                    <select className=\"form-control\" name=\"algorithm\" id=\"algorithm\" value={menuState.algorithm} onChange={(e) => onAlgorithmChange(e.currentTarget.value, dispatch)}>\n                        <option value=\"astar\">A*</option>\n                        <option value=\"dijkstra\">Dijkstra</option>\n                        <option value=\"bfs\">Breadth First Search</option>\n                        <option value=\"dfs\">Depth First Search</option>\n                        <option value=\"greedybfs\">Greedy Best First Search</option>\n                    </select>\n                    <select className=\"form-control\" disabled={menuState.algorithm !== \"astar\" && menuState.algorithm !== \"greedybfs\"} name=\"hueristic\" id=\"heuristic\" value={menuState.heuristic} onChange={(e) => onHeuristicChange(e.currentTarget.value, dispatch)}>\n                        <option value=\"manhattan\">Manhattan Distance</option>\n                        <option value=\"euclidean\">Euclidean Distance</option>\n                    </select>\n                </div>\n                <div className=\"path-settings\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" checked={menuState.cutCorners} id=\"cutCorners\" type=\"checkbox\" onChange={() => dispatch({type: 'cutCorners'})}></input>\n                        <label className=\"form-check-label\" htmlFor=\"cutCorners\">Cut Corners</label>\n                    </div>\n                    <div className=\"form-check\">\n                    <input className=\"form-check-input\" checked={menuState.allowDiags} id=\"allowDiags\" type=\"checkbox\" onChange={() => dispatch({type: 'allowDiags'})}></input>      \n                        <label className=\"form-check-label\" htmlFor=\"allowDiags\">Diagonals</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" disabled={menuState.algorithm === \"dfs\"} checked={menuState.biDirectional} id=\"biDirectional\" type=\"checkbox\" onChange={() => dispatch({type: 'biDirectional'})}></input>\n                        <label className=\"form-check-label\" htmlFor=\"biDirectional\">Bi-Directional</label>\n                    </div>\n                </div>\n                <div className=\"map-settings\">\n                    <button className=\"btn btn-primary\" onClick={() => dispatch({type: 'pathClear'})}>Clear Path</button>\n                    <button className=\"btn btn-primary\" onClick={() => dispatch({type: 'clear'})}>Clear</button>\n                    <SaveMap \n                        user={user}\n                        mapName={menuState.mapName}\n                        dispatch={dispatch}\n                    />\n                    <button className=\"btn btn-primary\" onClick={() => dispatch({type: 'reset', payload: {init: initialState}})}>Reset</button>\n                </div>\n                <button className=\"btn btn-primary\" onClick={() => dispatch({type: 'run'})}>Run</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}