{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\n\nfunction Square(props) {\n  const [state, setState] = useState({\n    x: props.x,\n    y: props.y,\n    val: props.val\n  });\n  useEffect(() => {\n    setState({ ...state,\n      val: props.val\n    });\n  }, [props.val]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${props.width}px`,\n      height: `${props.height}px`\n    },\n    className: \"square\",\n    onClick: () => props.onClick(state.x, state.y),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Map(props) {\n  const handleClick = (x, y) => {\n    console.log(`x: ${x}`);\n    return;\n  };\n\n  const grid = new Array(50).fill(0).map(() => new Array(100).fill(0));\n\n  const renderSquare = (x, y, val) => {\n    return /*#__PURE__*/React.createElement(Square, {\n      width: props.winDimensions.width / grid.length * (grid.length / grid[0].length) //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n      ,\n      height: Math.min(props.winDimensions.height / grid.length, props.winDimensions.width / grid.length * (grid.length / grid[0].length)),\n      x: x,\n      y: y,\n      val: val,\n      onClick: (x, y) => handleClick(x, y),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, grid.map((col, j) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-row\",\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, col.map((row, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid-col\",\n        key: j + i * grid.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, renderSquare(i, j, row));\n    }));\n  }));\n}\n\nfunction Sandbox() {\n  const [winDimensions, setWinDimensions] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight / 1.25\n  });\n  useEffect(() => {\n    const handleWinResize = () => {\n      setWinDimensions({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight / 1.25\n      });\n    };\n\n    window.addEventListener('resize', handleWinResize); // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n    return () => {\n      window.removeEventListener('resize', handleWinResize);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sandbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    winDimensions: winDimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js"],"names":["React","useState","useEffect","Square","props","state","setState","x","y","val","width","height","onClick","Map","handleClick","console","log","grid","Array","fill","map","renderSquare","winDimensions","length","Math","min","col","j","row","i","Sandbox","setWinDimensions","document","documentElement","clientWidth","clientHeight","handleWinResize","window","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,CAAC,EAAEH,KAAK,CAACG,CAAV;AAAaC,IAAAA,CAAC,EAAEJ,KAAK,CAACI,CAAtB;AAAyBC,IAAAA,GAAG,EAAEL,KAAK,CAACK;AAApC,GAAD,CAAlC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELI,MAAAA,GAAG,EAAEL,KAAK,CAACK;AAFN,KAAD,CAAR;AAIH,GALQ,EAKN,CAACL,KAAK,CAACK,GAAP,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAG,GAAEN,KAAK,CAACM,KAAM,IAAvB;AAA4BC,MAAAA,MAAM,EAAE,GAAEP,KAAK,CAACO,MAAO;AAAnD,KAAZ;AAAqE,IAAA,SAAS,EAAC,QAA/E;AAAwF,IAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,OAAN,CAAcP,KAAK,CAACE,CAApB,EAAsBF,KAAK,CAACG,CAA5B,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH;;AAED,SAASK,GAAT,CAAaT,KAAb,EAAoB;AAChB,QAAMU,WAAW,GAAG,CAACP,CAAD,EAAGC,CAAH,KAAS;AACzBO,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAKT,CAAE,EAApB;AACA;AACH,GAHD;;AAKA,QAAMU,IAAI,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,MAAM,IAAIF,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,CAApB,CAAhC,CAAb;;AAEA,QAAME,YAAY,GAAG,CAACd,CAAD,EAAGC,CAAH,EAAKC,GAAL,KAAa;AAC9B,wBACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAGL,KAAK,CAACkB,aAAN,CAAoBZ,KAApB,GAA4BO,IAAI,CAACM,MAAlC,IAA6CN,IAAI,CAACM,MAAL,GAAYN,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAjE,CADX,CAEI;AAFJ;AAGI,MAAA,MAAM,EAAEC,IAAI,CAACC,GAAL,CAAUrB,KAAK,CAACkB,aAAN,CAAoBX,MAApB,GAA8BM,IAAI,CAACM,MAA7C,EAAuDnB,KAAK,CAACkB,aAAN,CAAoBZ,KAApB,GAA4BO,IAAI,CAACM,MAAlC,IAA6CN,IAAI,CAACM,MAAL,GAAYN,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAjE,CAAtD,CAHZ;AAII,MAAA,CAAC,EAAEhB,CAJP;AAKI,MAAA,CAAC,EAAEC,CALP;AAMI,MAAA,GAAG,EAAEC,GANT;AAOI,MAAA,OAAO,EAAE,CAACF,CAAD,EAAGC,CAAH,KAASM,WAAW,CAACP,CAAD,EAAGC,CAAH,CAPjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,IAAI,CAACG,GAAL,CAAS,CAACM,GAAD,EAAMC,CAAN,KAAY;AAClB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEA,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,GAAG,CAACN,GAAJ,CAAQ,CAACQ,GAAD,EAAMC,CAAN,KAAY;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEF,CAAC,GAAGE,CAAC,GAAEZ,IAAI,CAACM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,YAAY,CAACQ,CAAD,EAAIF,CAAJ,EAAOC,GAAP,CADjB,CADJ;AAKH,KANA,CADL,CADJ;AAWH,GAZA,CADL,CADJ;AAiBH;;AAED,SAASE,OAAT,GAAmB;AACf,QAAM,CAACR,aAAD,EAAgBS,gBAAhB,IAAoC9B,QAAQ,CAAC;AAAES,IAAAA,KAAK,EAAEsB,QAAQ,CAACC,eAAT,CAAyBC,WAAlC;AAA+CvB,IAAAA,MAAM,EAAEqB,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC;AAA7F,GAAD,CAAlD;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,eAAe,GAAG,MAAM;AAC1BL,MAAAA,gBAAgB,CAAC;AACbrB,QAAAA,KAAK,EAAEsB,QAAQ,CAACC,eAAT,CAAyBC,WADnB;AAEbvB,QAAAA,MAAM,EAAEqB,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC;AAFjC,OAAD,CAAhB;AAIH,KALD;;AAOAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,eAAlC,EARY,CAUZ;;AAEA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,eAArC;AACH,KAFD;AAGH,GAfQ,CAAT;AAiBA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AACI,IAAA,aAAa,EAAEd,aADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH;;AAED,eAAeQ,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\n\nfunction Square(props) {\n    const [state, setState] = useState({x: props.x, y: props.y, val: props.val});\n    useEffect(() => {\n        setState({\n            ...state,\n            val: props.val\n        })\n    }, [props.val])\n\n    return (\n        <div style={{width: `${props.width}px`, height:`${props.height}px`}} className=\"square\" onClick={() => props.onClick(state.x,state.y)}>\n            \n        </div>\n    )\n}\n\nfunction Map(props) {\n    const handleClick = (x,y) => {\n        console.log(`x: ${x}`);\n        return\n    }\n\n    const grid = new Array(50).fill(0).map(() => new Array(100).fill(0));\n    \n    const renderSquare = (x,y,val) => {\n        return (\n            <Square \n                width={(props.winDimensions.width / grid.length) * (grid.length/grid[0].length)}\n                //This keeps ratio of squares so that they are square, they become longer if height becomes longer than the width (Square width is twice as long as square height)\n                height={Math.min((props.winDimensions.height /  grid.length), (props.winDimensions.width / grid.length) * (grid.length/grid[0].length))}\n                x={x}\n                y={y}\n                val={val}\n                onClick={(x,y) => handleClick(x,y)}\n            />\n        )\n    }\n    \n    return (\n        <div className=\"map\">\n            {grid.map((col, j) => {\n                return(\n                    <div className=\"grid-row\" key={j}>\n                        {col.map((row, i) => {\n                            return(\n                                <div className=\"grid-col\" key={j+ (i* grid.length)}>\n                                    {renderSquare(i, j, row)}\n                                </div>\n                            ) \n                        })}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nfunction Sandbox() {\n    const [winDimensions, setWinDimensions] = useState({ width: document.documentElement.clientWidth, height: document.documentElement.clientHeight/1.25 });\n\n    useEffect(() => {\n        const handleWinResize = () => {\n            setWinDimensions({\n                width: document.documentElement.clientWidth,\n                height: document.documentElement.clientHeight/1.25\n            })\n        }\n\n        window.addEventListener('resize', handleWinResize);\n\n        // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n        return () => {\n            window.removeEventListener('resize', handleWinResize);\n        };\n    })\n\n    return (\n        <div id=\"sandbox\">\n            <Map \n                winDimensions={winDimensions}\n            />\n        </div>\n    );\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}