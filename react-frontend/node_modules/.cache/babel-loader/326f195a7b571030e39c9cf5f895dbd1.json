{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\nlet downFlag = false; //TODO: Runs a little slow, find a way to optimize (possibly using hooks)\n\nfunction Square(props) {\n  const [state, setState] = useState({\n    x: props.x,\n    y: props.y,\n    val: props.val,\n    type: props.itemType\n  }); // console.log(props.width, props.height)\n\n  useEffect(() => {\n    setState({ ...state,\n      val: props.val,\n      type: props.itemType\n    });\n  }, [props.val]);\n\n  const handler = (e, x = null, y = null) => {\n    if (e.type === \"mousedown\") {\n      downFlag = true; // console.log(x,y);\n\n      props.squareClick(x, y);\n    }\n\n    if (e.type === \"mouseover\") {\n      if (downFlag) {\n        // console.log(x,y);\n        props.squareClick(x, y);\n      }\n    }\n\n    if (e.type === \"mouseup\") {\n      if (downFlag) {\n        downFlag = false;\n      }\n    }\n  };\n\n  switch (state.type) {\n    case \"start\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `#28fc86` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      });\n\n    case \"wall\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `#c8c6c4` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      });\n\n    case \"end\":\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: props.val === true ? `#ef5350` : `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          backgroundColor: `white`\n        },\n        className: \"square\",\n        onMouseDown: e => handler(e, state.x, state.y),\n        onMouseUp: e => handler(e),\n        onMouseOver: e => handler(e, state.x, state.y),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      });\n  }\n}\n\nfunction Map(props) {\n  const [state, setState] = useState({\n    rows: 15,\n    cols: 50,\n    grid: new Array(15 * 50).fill({\n      val: false,\n      type: null\n    }),\n    //space-time O(1)\n    itemType: \"start\"\n  });\n\n  const renderSquare = (x, y, val) => {\n    return /*#__PURE__*/React.createElement(Square //Minus 4 accounts for width and height\n    , {\n      width: state.cols > state.rows ? props.winDimensions.width / state.cols - 4 : props.winDimensions.width / state.cols * (Math.min(props.winDimensions.width / state.cols, props.winDimensions.height / state.rows) / Math.max(props.winDimensions.width / state.cols, props.winDimensions.height / state.rows)) - 4,\n      height: state.rows === state.cols ? props.winDimensions.height / state.rows - 4 //converting aspect ration of the square to 1:1 by multiplying the height by minimum of the width and height divided by the maximum of the width and height\n      : props.winDimensions.height / state.rows * (Math.min(props.winDimensions.width / state.cols, props.winDimensions.height / state.rows) / Math.max(props.winDimensions.width / state.cols, props.winDimensions.height / state.rows)) - 4,\n      x: x,\n      y: y,\n      val: val,\n      squareClick: (x, y) => handleClick(x, y),\n      itemType: state.itemType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const renderMap = () => {\n    const rows = Array(state.rows);\n    const cols = Array(state.rows);\n\n    for (let i = 0; i < state.grid.length; i++) {\n      if (i % state.cols === 0) {\n        cols[i / state.cols] = Array(state.cols);\n        rows[i] = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"grid-row\",\n          key: i / state.cols,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, cols[i / state.cols]);\n      }\n\n      let square = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid-col\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, renderSquare(i % state.cols, (i - i % state.cols) / state.cols, state.grid[i].val));\n      cols[(i - i % state.cols) / state.cols][i % state.cols] = square;\n    }\n\n    const map = rows;\n    return map;\n  };\n\n  const switchItemType = itemType => {\n    setState({ ...state,\n      itemType: itemType\n    });\n  };\n\n  const clearMap = () => {\n    setState({ ...state,\n      grid: new Array(state.rows * state.cols).fill({\n        val: false,\n        type: null\n      })\n    });\n  };\n\n  console.log(state.grid);\n\n  const handleClick = (x, y) => {\n    switch (state.itemType) {\n      case \"start\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((square, index) => {\n            if (index === x + y * state.cols) {\n              // console.log(x,y,square.type,state.itemType);\n              if (square.type === state.itemType || !square.val) {\n                return square.val ? { ...square,\n                  val: false,\n                  type: null\n                } : { ...square,\n                  val: true,\n                  type: state.itemType\n                };\n              }\n            }\n\n            if (square.type === state.itemType && square.val && !state.grid[x + y * state.cols].val) {\n              return { ...square,\n                val: false\n              };\n            }\n\n            return { ...square\n            };\n          })\n        }));\n        break;\n\n      case \"wall\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((square, index) => {\n            if (index === x + y * state.cols) {\n              // console.log(x,y,square.type,state.itemType);\n              if (square.type === state.itemType || !square.val) {\n                return square.val ? { ...square,\n                  val: false,\n                  type: null\n                } : { ...square,\n                  val: true,\n                  type: state.itemType\n                };\n              }\n            }\n\n            return { ...square\n            };\n          })\n        }));\n        break;\n\n      case \"end\":\n        setState(state => ({ ...state,\n          //state object is immutable so updates have to be done this way\n          grid: state.grid.map((square, index) => {\n            if (index === x + y * state.cols) {\n              // console.log(x,y,square.type,state.itemType);\n              if (square.type === state.itemType || !square.val) {\n                return square.val ? { ...square,\n                  val: false,\n                  type: null\n                } : { ...square,\n                  val: true,\n                  type: state.itemType\n                };\n              }\n            }\n\n            return { ...square\n            };\n          })\n        }));\n        break;\n\n      default:\n        break;\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, console.time(), renderMap(), console.timeEnd(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"start\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Start Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"wall\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Wall Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => switchItemType(\"end\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"End Item\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => clearMap(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Run\")));\n}\n\nfunction Sandbox() {\n  const [winDimensions, setWinDimensions] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight\n  });\n  useEffect(() => {\n    const handleWinResize = () => {\n      setWinDimensions({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight\n      });\n    };\n\n    window.addEventListener('resize', handleWinResize); // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n    return () => {\n      window.removeEventListener('resize', handleWinResize);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sandbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    winDimensions: winDimensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js"],"names":["React","useState","useEffect","downFlag","Square","props","state","setState","x","y","val","type","itemType","handler","e","squareClick","width","height","backgroundColor","Map","rows","cols","grid","Array","fill","renderSquare","winDimensions","Math","min","max","handleClick","renderMap","i","length","square","map","switchItemType","clearMap","console","log","index","time","timeEnd","Sandbox","setWinDimensions","document","documentElement","clientWidth","clientHeight","handleWinResize","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sandbox.css';\n\n\nlet downFlag = false;\n\n//TODO: Runs a little slow, find a way to optimize (possibly using hooks)\nfunction Square(props) {\n    const [state, setState] = useState({x: props.x, y: props.y, val: props.val, type: props.itemType});\n    \n    // console.log(props.width, props.height)\n\n    useEffect(() => {\n        setState({\n            ...state,\n            val: props.val,\n            type: props.itemType\n        })\n    }, [props.val]);\n\n    const handler = (e, x=null, y=null) => {\n        if(e.type === \"mousedown\"){\n            downFlag = true;\n            // console.log(x,y);\n            props.squareClick(x,y);\n        }\n        \n        if(e.type === \"mouseover\"){\n            if(downFlag){\n                // console.log(x,y);\n                props.squareClick(x, y);\n            }\n        }\n\n        if(e.type === \"mouseup\"){\n            if(downFlag){\n                downFlag = false;\n            }\n        }\n    }\n\n    switch (state.type) {\n        case \"start\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `#28fc86` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n\n        case \"wall\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `#c8c6c4` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n\n        case \"end\":\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: props.val === true ? `#ef5350` : `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n    \n        default:\n            return (\n                <div style={{width: `${props.width}px`, height:`${props.height}px`, backgroundColor: `white`}} className=\"square\" onMouseDown={(e) => handler(e,state.x,state.y)} onMouseUp={(e) => handler(e)} onMouseOver={(e) => handler(e,state.x,state.y)}></div>\n            )\n    }\n}\n\nfunction Map(props) {\n    const [state, setState] = useState({\n        rows: 15,\n        cols: 50,\n        grid: new Array(15*50).fill({val: false, type: null}),//space-time O(1)\n        itemType: \"start\"\n    })\n    \n    const renderSquare = (x,y,val) => {\n        return (\n            <Square\n                //Minus 4 accounts for width and height\n                width={\n                    state.cols > state.rows\n                        ? (props.winDimensions.width / state.cols) - 4\n                        : (props.winDimensions.width / state.cols) * (Math.min((props.winDimensions.width / state.cols),(props.winDimensions.height / state.rows)) / Math.max((props.winDimensions.width / state.cols),(props.winDimensions.height / state.rows))) - 4 \n                }\n                height={\n                    state.rows === state.cols\n                        ? (props.winDimensions.height / state.rows) - 4\n                        //converting aspect ration of the square to 1:1 by multiplying the height by minimum of the width and height divided by the maximum of the width and height\n                        : (props.winDimensions.height / state.rows) * (Math.min((props.winDimensions.width / state.cols),(props.winDimensions.height / state.rows)) / Math.max((props.winDimensions.width / state.cols),(props.winDimensions.height / state.rows))) - 4\n                }\n                x={x}\n                y={y}\n                val={val}\n                squareClick={(x, y) => handleClick(x, y)}\n                itemType={state.itemType}\n            />\n        )\n    }\n\n    const renderMap = () => {\n        const rows = Array(state.rows);\n        const cols = Array(state.rows);\n\n        for(let i = 0; i < state.grid.length; i++){\n            if(i % state.cols === 0){\n                cols[i / state.cols] = Array(state.cols);\n\n                rows[i] = (\n                    <div className=\"grid-row\" key={i / state.cols}>\n                        {cols[i / state.cols]}\n                    </div>\n                )\n            }\n\n            let square = (\n                <div className=\"grid-col\" key={i}>\n                    {renderSquare(i % state.cols, (i - (i % state.cols)) / state.cols, state.grid[i].val)}\n                </div>\n            )\n\n            cols[(i - (i % state.cols)) / state.cols][i % state.cols] = square;\n        }\n\n        const map = rows;\n\n        return map;\n    }\n    \n\n    const switchItemType = (itemType) => {\n        setState({\n            ...state,\n            itemType: itemType,\n        })\n    }\n\n    const clearMap = () => {\n        setState({\n            ...state,\n            grid: new Array(state.rows*state.cols).fill({val: false, type: null})\n        })\n    }\n    console.log(state.grid)\n    const handleClick = (x,y) => {\n        switch (state.itemType) {\n            case \"start\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((square, index) => {\n                        if(index === x + (y * state.cols)){\n                            // console.log(x,y,square.type,state.itemType);\n                            if(square.type === state.itemType || !square.val){\n                                return square.val\n                                        ? {...square, val: false, type: null}\n                                        : {...square, val: true, type: state.itemType}\n                            }\n                        }\n\n                        if(square.type === state.itemType && square.val && !state.grid[x + (y * state.cols)].val){\n                            return {...square, val: false}\n                        }\n\n                        return {...square}\n                    })\n                }));\n                \n                break;\n\n            case \"wall\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((square, index) => {\n                        if(index === x + (y * state.cols)){\n                            // console.log(x,y,square.type,state.itemType);\n                            if(square.type === state.itemType || !square.val){\n                                return square.val\n                                        ? {...square, val: false, type: null}\n                                        : {...square, val: true, type: state.itemType}\n                            }\n                        }\n\n                        return {...square}\n                    })\n                }));\n\n                break;\n\n            case \"end\":\n                setState(state => ({\n                    ...state,\n                    //state object is immutable so updates have to be done this way\n                    grid: state.grid.map((square, index) => {\n                        if(index === x + (y * state.cols)){\n                            // console.log(x,y,square.type,state.itemType);\n                            if(square.type === state.itemType || !square.val){\n                                return square.val\n                                        ? {...square, val: false, type: null}\n                                        : {...square, val: true, type: state.itemType}\n                            }\n                        }\n\n                        return {...square}\n                    })\n                }));\n\n                break;\n        \n            default:\n                break;\n        }\n\n        return;\n    }\n    \n    return (\n        <div className=\"map\">\n            {console.time()}\n                {renderMap()}\n            {console.timeEnd()}\n            <div className=\"map-menu\">\n            <button onClick={() => switchItemType(\"start\")}>Start Item</button>\n            <button onClick={() => switchItemType(\"wall\")}>Wall Item</button>\n            <button onClick={() => switchItemType(\"end\")}>End Item</button>\n            <button onClick={() => clearMap()}>Clear</button>\n            <button>Run</button>\n            </div>\n        </div>\n    )\n}\n\nfunction Sandbox() {\n    const [winDimensions, setWinDimensions] = useState({ width: document.documentElement.clientWidth, height: document.documentElement.clientHeight });\n\n    useEffect(() => {\n        const handleWinResize = () => {\n            setWinDimensions({\n                width: document.documentElement.clientWidth,\n                height: document.documentElement.clientHeight\n            })\n        }\n\n        window.addEventListener('resize', handleWinResize);\n\n        // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n        return () => {\n            window.removeEventListener('resize', handleWinResize);\n        };\n    })\n\n    return (\n        <div id=\"sandbox\">\n            <Map \n                winDimensions={winDimensions}\n            />\n        </div>\n    );\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}