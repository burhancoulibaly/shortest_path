{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js\";\nimport React from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Auth Helpers/AuthHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = props => {\n  let history = useHistory();\n  const [login, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(AuthHelper.login);\n  const [signup, {\n    signupLoading,\n    signupError,\n    signupData\n  }] = useMutation(AuthHelper.signup);\n  generateForm;\n\n  if (error) {\n    console.log(error);\n    let formRef = document.getElementsByClassName(\"login\")[0];\n    console.log(formRef);\n    let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n    if (formRef && formRef.getElementsByClassName(\"error-paragraph\")) {\n      formRef.remove(errorParagraphRef);\n    }\n\n    let errorParagragh = document.createElement(\"P\");\n    let errorMessage = document.createTextNode(\"Unable to log you in at this time\");\n    errorParagragh.classList.add(\"error-paragraph\");\n    errorParagragh.appendChild(errorMessage);\n    formRef.appendChild(errorParagragh);\n    return null;\n  }\n\n  ;\n\n  if (loading) {\n    console.log(\"...loading\");\n  }\n\n  if (data) {\n    let formRef = document.getElementsByClassName(\"login\")[0];\n\n    if (data.login.response_type.includes(\"Error\")) {\n      console.log(formRef);\n      let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n      if (formRef && formRef.getElementsByClassName(\"error-paragraph\")) {\n        formRef.remove(errorParagraphRef);\n      }\n\n      let errorParagragh = document.createElement(\"P\");\n      let errorMessage = document.createTextNode(\"Invalid login credentials\");\n      errorParagragh.classList.add(\"error-paragraph\");\n      errorParagragh.appendChild(errorMessage);\n      formRef.appendChild(errorParagragh);\n      return null;\n    }\n\n    ;\n    history.push('/');\n    return null;\n  }\n};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginOption: \"login\"\n    };\n  }\n\n  renderForm() {\n    if (this.state.loginOption === \"login\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      });\n    } // register($username: String!, $email: String!, $password: String!)\n\n\n    if (this.state.loginOption === \"signup\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.loginOption === \"guest\") {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        loginOption: this.state.loginOption,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  onSubmit(e) {\n    console.log(e.target.form.elements);\n    return false;\n  }\n\n  selectLoginOption(e, loginOption) {\n    // see if this becomes a problem later\n    document.forms[0].reset();\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    allLoginButtons.forEach(button => {\n      button.classList.remove(\"active\");\n    });\n    e.target.closest(\"button\").classList.add(\"active\"); //React Re-renders when this.setState is called.\n\n    this.setState({\n      loginOption: loginOption\n    });\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.renderForm(), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"login-btn btn active\",\n      onClick: $event => this.selectLoginOption($event, `login`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"signup-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `signup`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"guest-btn btn\",\n      onClick: $event => this.selectLoginOption($event, `guest`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, \"Guest\")))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js"],"names":["React","AuthHelper","useLazyQuery","useMutation","useHistory","LoginForm","props","history","login","loading","error","data","signup","signupLoading","signupError","signupData","generateForm","console","log","formRef","document","getElementsByClassName","errorParagraphRef","remove","errorParagragh","createElement","errorMessage","createTextNode","classList","add","appendChild","response_type","includes","push","LoginPage","Component","constructor","state","loginOption","renderForm","onSubmit","e","target","form","elements","selectLoginOption","forms","reset","allLoginButtons","childNodes","forEach","button","closest","setState","render","$event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Auth Helpers/AuthHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n  let history = useHistory();\n  const [login, { loading, error, data }] = useLazyQuery(AuthHelper.login);\n  const [signup, { signupLoading, signupError, signupData }] = useMutation(AuthHelper.signup);\n\n  generateForm\n\n  if(error){\n    console.log(error);\n    let formRef = document.getElementsByClassName(\"login\")[0];\n    console.log(formRef);\n    let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n    if(formRef && formRef.getElementsByClassName(\"error-paragraph\")){\n      formRef.remove(errorParagraphRef);\n    }\n\n    let errorParagragh = document.createElement(\"P\");\n    let errorMessage = document.createTextNode(\"Unable to log you in at this time\");\n\n    errorParagragh.classList.add(\"error-paragraph\");\n    errorParagragh.appendChild(errorMessage);\n\n    formRef.appendChild(errorParagragh);\n\n    return null;\n  };\n\n  if(loading){\n    console.log(\"...loading\");\n  }\n\n  if(data){\n    let formRef = document.getElementsByClassName(\"login\")[0];\n\n    if(data.login.response_type.includes(\"Error\")){\n      console.log(formRef);\n      let errorParagraphRef = document.getElementsByClassName(\"error-paragraph\");\n\n      if(formRef && formRef.getElementsByClassName(\"error-paragraph\")){\n        formRef.remove(errorParagraphRef);\n      }\n\n      let errorParagragh = document.createElement(\"P\");\n      let errorMessage = document.createTextNode(\"Invalid login credentials\");\n\n      errorParagragh.classList.add(\"error-paragraph\");\n      errorParagragh.appendChild(errorMessage);\n\n      formRef.appendChild(errorParagragh);\n\n      return null;\n    };\n\n    history.push('/');\n    return null;\n  }\n  \n  \n}\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginOption: \"login\",\n    }\n  }\n\n  renderForm(){\n    if(this.state.loginOption === \"login\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n    // register($username: String!, $email: String!, $password: String!)\n    if(this.state.loginOption === \"signup\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n\n    if(this.state.loginOption === \"guest\"){\n      return (\n        <LoginForm \n          loginOption={this.state.loginOption}\n        />\n      );\n    }\n  }\n\n  onSubmit(e){\n    console.log(e.target.form.elements);\n\n    return false;\n  }\n  \n  selectLoginOption(e, loginOption){\n    // see if this becomes a problem later\n    document.forms[0].reset();\n\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    \n    allLoginButtons.forEach((button) => {\n      button.classList.remove(\"active\");\n    });\n\n    e.target.closest(\"button\").classList.add(\"active\");\n\n    //React Re-renders when this.setState is called.\n    this.setState({\n      loginOption: loginOption\n    })\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div id=\"login-page\">\n        <div class=\"login-container\">\n\n          {/* Login form */}\n          {this.renderForm()}\n     \n          <div class=\"login-options\">\n            <button class=\"login-btn btn active\" onClick={($event) => this.selectLoginOption($event, `login`)}>\n              <h1>Login</h1>\n            </button>\n            <button class=\"signup-btn btn\" onClick={($event) => this.selectLoginOption($event, `signup`)}>\n              <h1>Sign Up</h1>\n            </button>\n            <button class=\"guest-btn btn\" onClick={($event) => this.selectLoginOption($event, `guest`)}>\n              <h1>Guest</h1>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}