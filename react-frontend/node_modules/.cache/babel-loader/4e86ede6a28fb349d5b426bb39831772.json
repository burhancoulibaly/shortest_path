{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js\";\nimport React, { useState, useEffect, useMemo, useReducer } from 'react';\nimport './Sandbox.css';\nimport Map from '../Map/Map';\nimport Menu from '../Menu/Menu';\nimport MenuContext from '../MenuContext';\nimport { useLazyQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\n\nfunction init(initialState) {\n  return {\n    itemState: initialState.itemState,\n    clear: initialState.clear,\n    run: initialState.run,\n    heuristic: initialState.heuristic,\n    algorithm: initialState.algorithm,\n    pathClear: initialState.pathClear,\n    cutCorners: initialState.cutCorners,\n    allowDiags: initialState.allowDiags,\n    biDirectional: initialState.biDirectional,\n    isResetting: initialState.isResetting,\n    isSaving: initialState.isSaving,\n    mapName: initialState.mapName,\n    isEdit: initialState.isEdit\n  };\n}\n\nfunction reducer(menuState, action) {\n  switch (action.type) {\n    case 'setItemState':\n      return { ...menuState,\n        itemState: action.payload.itemState\n      };\n\n    case 'mapName':\n      return { ...menuState,\n        mapName: [...menuState.mapName, action.payload.mapName]\n      };\n\n    case 'mapNameReset':\n      return { ...menuState,\n        mapName: []\n      };\n\n    case 'setHeuristic':\n      return { ...menuState,\n        heuristic: action.payload.heuristic\n      };\n\n    case 'setAlgorithm':\n      return { ...menuState,\n        algorithm: action.payload.algorithm\n      };\n\n    case 'clear':\n      return { ...menuState,\n        clear: true\n      };\n\n    case 'cleared':\n      return { ...menuState,\n        clear: false\n      };\n\n    case 'pathClear':\n      return { ...menuState,\n        pathClear: true\n      };\n\n    case 'pathCleared':\n      return { ...menuState,\n        pathClear: false\n      };\n\n    case 'run':\n      return { ...menuState,\n        run: true\n      };\n\n    case 'complete':\n      return { ...menuState,\n        run: false\n      };\n\n    case 'cutCorners':\n      return { ...menuState,\n        cutCorners: !menuState.cutCorners\n      };\n\n    case 'allowDiags':\n      return { ...menuState,\n        allowDiags: !menuState.allowDiags\n      };\n\n    case 'biDirectional':\n      return { ...menuState,\n        biDirectional: !menuState.biDirectional\n      };\n\n    case 'reset':\n      return { ...menuState,\n        isResetting: !menuState.isResetting\n      };\n\n    case 'save':\n      return { ...menuState,\n        isSaving: !menuState.isSaving\n      };\n\n    case 'edit':\n      return { ...menuState,\n        isEdit: true\n      };\n\n    case 'initialize':\n      return init(action.payload.init);\n\n    default:\n      throw new Error(\"Not a valid action\");\n  }\n}\n\nfunction Sandbox(props) {\n  const [winDimensions, setWinDimensions] = useState({\n    width: document.documentElement.clientWidth,\n    height: document.documentElement.clientHeight\n  });\n  const initialState = {\n    itemState: \"start\",\n    heuristic: \"euclidean\",\n    algorithm: \"astar\",\n    clear: false,\n    pathClear: false,\n    run: false,\n    cutCorners: false,\n    allowDiags: true,\n    biDirectional: false,\n    isResetting: false,\n    isSaving: false,\n    mapName: [],\n    isEdit: false\n  };\n  const [menuState, dispatch] = useReducer(reducer, initialState, init);\n  const [fetchedMap, setfetchedMap] = useState();\n  const menu = useMemo(() => ({\n    menuState,\n    dispatch\n  }), [menuState, dispatch]);\n  const [getUserMap, {\n    error: getUserMapError,\n    loading: getUserMapLoading,\n    data: getUserMapData\n  }] = useLazyQuery(MapHelper.getUserMap);\n  useEffect(() => {\n    if (getUserMapError) {\n      console.log(getUserMapError);\n    }\n\n    if (getUserMapLoading) {\n      console.log(getUserMapLoading);\n      menu.dispatch({\n        type: \"mapName\",\n        payload: {\n          mapName: \"...\"\n        }\n      });\n    }\n\n    if (getUserMapData) {\n      console.log(\"data retrieved\");\n      menu.dispatch({\n        type: \"edit\"\n      });\n      menu.dispatch({\n        type: \"mapNameReset\"\n      });\n      menu.dispatch({\n        type: \"mapName\",\n        payload: {\n          mapName: getUserMapData.getUserMap.name\n        }\n      });\n      setfetchedMap(fetchedMap => {\n        return getUserMapData.getUserMap.map;\n      });\n    }\n  }, [getUserMapError, getUserMapLoading, getUserMapData, menu]);\n\n  const getMap = () => {\n    console.log(getUserMapLoading);\n\n    if (props.location.state) {\n      return props.location.state.userMap;\n    }\n\n    if (parseInt(localStorage.getItem(\"mapVersion\")) === 0) {\n      return JSON.parse(localStorage.getItem(\"map\")).userMap;\n    }\n\n    console.log(\"Map was fetched\");\n    localStorage.setItem(\"mapVersion\", 0);\n    return fetchedMap;\n  };\n\n  if (!menu.menuState.mapName.length > 0) {\n    if (props.location.state) {\n      localStorage.setItem(\"mapVersion\", 0);\n      localStorage.setItem(\"map\", JSON.stringify(props.location.state));\n      menu.dispatch({\n        type: \"edit\"\n      });\n      menu.dispatch({\n        type: \"mapName\",\n        payload: {\n          mapName: props.location.state.mapName\n        }\n      });\n    } else if (localStorage.getItem(\"map\")) {\n      if (parseInt(localStorage.getItem(\"mapVersion\")) !== 0 && !fetchedMap) {\n        getUserMap({\n          variables: {\n            mapName: JSON.parse(localStorage.getItem(\"map\")).mapName\n          }\n        });\n      } else {\n        menu.dispatch({\n          type: \"edit\"\n        });\n        menu.dispatch({\n          type: \"mapName\",\n          payload: {\n            mapName: JSON.parse(localStorage.getItem(\"map\")).mapName\n          }\n        });\n      }\n    }\n  }\n\n  console.log(menu.menuState.mapName, menu.menuState.mapName[0], menu.menuState.mapName[menuState.mapName.length - 1]);\n  useEffect(() => {\n    const handleWinResize = () => {\n      setWinDimensions({\n        width: document.documentElement.clientWidth,\n        height: document.documentElement.clientHeight\n      });\n    };\n\n    window.addEventListener('resize', handleWinResize); // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n    return () => {\n      window.removeEventListener('resize', handleWinResize);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sandbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    winDimensions: winDimensions,\n    userMap: getMap(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    initialState: initialState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Sandbox;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Sandbox/Sandbox.js"],"names":["React","useState","useEffect","useMemo","useReducer","Map","Menu","MenuContext","useLazyQuery","MapHelper","init","initialState","itemState","clear","run","heuristic","algorithm","pathClear","cutCorners","allowDiags","biDirectional","isResetting","isSaving","mapName","isEdit","reducer","menuState","action","type","payload","Error","Sandbox","props","winDimensions","setWinDimensions","width","document","documentElement","clientWidth","height","clientHeight","dispatch","fetchedMap","setfetchedMap","menu","getUserMap","error","getUserMapError","loading","getUserMapLoading","data","getUserMapData","console","log","name","map","getMap","location","state","userMap","parseInt","localStorage","getItem","JSON","parse","setItem","length","stringify","variables","handleWinResize","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useReducer } from 'react';\nimport './Sandbox.css';\nimport Map from '../Map/Map';\nimport Menu from '../Menu/Menu';\nimport MenuContext from '../MenuContext';\nimport { useLazyQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\n\nfunction init(initialState){\n    return {\n        itemState: initialState.itemState,\n        clear: initialState.clear,\n        run: initialState.run,\n        heuristic: initialState.heuristic,\n        algorithm: initialState.algorithm,\n        pathClear: initialState.pathClear,\n        cutCorners: initialState.cutCorners,\n        allowDiags: initialState.allowDiags,\n        biDirectional: initialState.biDirectional,\n        isResetting: initialState.isResetting,\n        isSaving: initialState.isSaving,\n        mapName: initialState.mapName,\n        isEdit: initialState.isEdit,\n    }\n}\n\nfunction reducer(menuState, action){\n    switch (action.type) {\n        case 'setItemState':\n            return {...menuState, itemState: action.payload.itemState}\n        case 'mapName':\n            return {...menuState, mapName: [...menuState.mapName, action.payload.mapName]}\n        case 'mapNameReset':\n            return {...menuState, mapName: []}\n        case 'setHeuristic':\n            return {...menuState, heuristic: action.payload.heuristic}\n        case 'setAlgorithm':\n            return {...menuState, algorithm: action.payload.algorithm}   \n        case 'clear':\n            return {...menuState, clear: true};\n        case 'cleared':\n            return {...menuState, clear: false};\n        case 'pathClear':\n            return {...menuState, pathClear: true};\n        case 'pathCleared':\n            return {...menuState, pathClear: false};\n        case 'run':\n            return {...menuState, run: true};\n        case 'complete':\n            return {...menuState, run: false};\n        case 'cutCorners':\n            return {...menuState, cutCorners: !menuState.cutCorners};\n        case 'allowDiags':\n            return {...menuState, allowDiags: !menuState.allowDiags};\n        case 'biDirectional':\n            return {...menuState, biDirectional: !menuState.biDirectional};\n        case 'reset':\n            return {...menuState, isResetting: !menuState.isResetting};\n        case 'save':\n            return {...menuState, isSaving: !menuState.isSaving};\n        case 'edit':\n            return {...menuState, isEdit: true};\n        case 'initialize':\n            return init(action.payload.init);\n        default:\n            throw new Error(\"Not a valid action\");\n    }\n}\n\nfunction Sandbox(props) {\n    const [winDimensions, setWinDimensions] = useState({ width: document.documentElement.clientWidth, height: document.documentElement.clientHeight });\n\n    const initialState = {\n        itemState: \"start\",\n        heuristic: \"euclidean\",\n        algorithm: \"astar\",\n        clear: false,\n        pathClear: false,\n        run: false,\n        cutCorners: false,\n        allowDiags: true,\n        biDirectional: false,\n        isResetting: false,\n        isSaving: false,\n        mapName: [],\n        isEdit: false,\n    }\n\n    const [menuState, dispatch] = useReducer(reducer, initialState, init);\n    const [fetchedMap, setfetchedMap] = useState();\n\n    const menu = useMemo(() => ({menuState, dispatch}), [menuState, dispatch]);\n\n    const [getUserMap, { error: getUserMapError, loading: getUserMapLoading, data: getUserMapData }] = useLazyQuery(MapHelper.getUserMap);\n    \n    useEffect(() => {\n        if(getUserMapError){\n            console.log(getUserMapError);\n        }\n\n        if(getUserMapLoading){\n            console.log(getUserMapLoading);\n            menu.dispatch({type: \"mapName\", payload: { mapName: \"...\" }});\n        }\n\n        if(getUserMapData){\n            console.log(\"data retrieved\")\n            menu.dispatch({type: \"edit\"});\n            menu.dispatch({type: \"mapNameReset\"});\n            menu.dispatch({type: \"mapName\", payload: { mapName: getUserMapData.getUserMap.name }});\n\n            setfetchedMap((fetchedMap) => {\n                return getUserMapData.getUserMap.map;\n            })\n        }\n    }, [getUserMapError, getUserMapLoading, getUserMapData, menu]);\n\n    const getMap = () => {\n        console.log(getUserMapLoading)\n        if(props.location.state){\n            return props.location.state.userMap;\n        }\n\n        if(parseInt(localStorage.getItem(\"mapVersion\")) === 0){\n            return JSON.parse(localStorage.getItem(\"map\")).userMap;\n        }\n\n        console.log(\"Map was fetched\")\n        localStorage.setItem(\"mapVersion\", 0);\n        return fetchedMap;\n    }\n\n    if(!menu.menuState.mapName.length > 0){\n        if(props.location.state){\n            localStorage.setItem(\"mapVersion\", 0);\n            localStorage.setItem(\"map\", JSON.stringify(props.location.state));\n\n            menu.dispatch({type: \"edit\"});\n            menu.dispatch({type: \"mapName\", payload: { mapName: props.location.state.mapName }});\n        }else if(localStorage.getItem(\"map\")){\n\n\n            if(parseInt(localStorage.getItem(\"mapVersion\")) !== 0 && !fetchedMap){\n                \n                getUserMap({\n                    variables: {\n                        mapName: JSON.parse(localStorage.getItem(\"map\")).mapName\n                    }\n                })\n            }else{\n                menu.dispatch({type: \"edit\"});\n                menu.dispatch({type: \"mapName\", payload: { mapName: JSON.parse(localStorage.getItem(\"map\")).mapName }});\n            }\n        }\n    }\n\n    console.log(menu.menuState.mapName, menu.menuState.mapName[0], menu.menuState.mapName[menuState.mapName.length-1])\n\n    useEffect(() => {\n        const handleWinResize = () => {\n            setWinDimensions({\n                width: document.documentElement.clientWidth,\n                height: document.documentElement.clientHeight\n            })\n        }\n\n        window.addEventListener('resize', handleWinResize);\n\n        // console.log(\"Window has been resized: \", winDimensions.width, winDimensions.height);\n\n        return () => {\n            window.removeEventListener('resize', handleWinResize);\n        };\n    })\n\n    return (\n        <div id=\"sandbox\">\n            <MenuContext.Provider value={menu}>\n                <Map \n                    winDimensions={winDimensions}\n                    userMap={getMap()}\n                />\n                <Menu \n                    initialState={initialState}\n                />\n            </MenuContext.Provider>\n        </div>\n    );\n}\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}