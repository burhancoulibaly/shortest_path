{"ast":null,"code":"const charRegEx = TRegExp(/^[A-Za-z]+$/); //validates for alphabetic characters only\n\nconst emailRegex = /^[a-zA-Z0-9_\\.\\-]*[@]?[a-zA-Z0-9-]*[\\.]?[a-zA-Z0-9-.]*$/;\nconst stringRegEx = /^([a-zA-Z0-9]+[_\\.\\-]?)+$/;\nconst InputValidationHelper = {\n  validateChar: str => {\n    return this.charRegEx.test(str);\n  },\n  validateString: str => {\n    console.log(this.stringRegEx.test(str));\n    return this.stringRegEx.test(str);\n  },\n  validateEmail: str => {\n    return this.emailRegex.test(str);\n  },\n  validatePassword: str => {\n    if (str.length < 8) {\n      return false;\n    }\n\n    return true;\n  },\n  validatePasswords: (str1, str2) => {\n    console.log(str1, str2);\n\n    if (str1 != str2) {\n      return false;\n    }\n\n    return true;\n  },\n  encodeHTML: s => {\n    return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n  }\n};\nexport default InputValidationHelper;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Helpers/InputValidationHelper.js"],"names":["charRegEx","TRegExp","emailRegex","stringRegEx","InputValidationHelper","validateChar","str","test","validateString","console","log","validateEmail","validatePassword","length","validatePasswords","str1","str2","encodeHTML","s","replace"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB,C,CAAyC;;AACzC,MAAMC,UAAU,GAAG,yDAAnB;AACA,MAAMC,WAAW,GAAG,2BAApB;AAEA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,YAAY,EAAGC,GAAD,IAAS;AACnB,WAAO,KAAKN,SAAL,CAAeO,IAAf,CAAoBD,GAApB,CAAP;AACH,GAHyB;AAI1BE,EAAAA,cAAc,EAAGF,GAAD,IAAQ;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,WAAL,CAAiBI,IAAjB,CAAsBD,GAAtB,CAAZ;AACA,WAAO,KAAKH,WAAL,CAAiBI,IAAjB,CAAsBD,GAAtB,CAAP;AACH,GAPyB;AAQ1BK,EAAAA,aAAa,EAAGL,GAAD,IAAS;AACpB,WAAO,KAAKJ,UAAL,CAAgBK,IAAhB,CAAqBD,GAArB,CAAP;AACH,GAVyB;AAW1BM,EAAAA,gBAAgB,EAAGN,GAAD,IAAS;AACvB,QAAGA,GAAG,CAACO,MAAJ,GAAa,CAAhB,EAAkB;AACd,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAjByB;AAkB1BC,EAAAA,iBAAiB,EAAE,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC/BP,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAAkBC,IAAlB;;AACA,QAAGD,IAAI,IAAIC,IAAX,EAAgB;AACZ,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAzByB;AA0B1BC,EAAAA,UAAU,EAAGC,CAAD,IAAO;AACf,WAAOA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,EAAyBA,OAAzB,CAAiC,IAAjC,EAAuC,MAAvC,EAA+CA,OAA/C,CAAuD,IAAvD,EAA6D,QAA7D,CAAP;AACH;AA5ByB,CAA9B;AA+BA,eAAef,qBAAf","sourcesContent":["const charRegEx = TRegExp(/^[A-Za-z]+$/);//validates for alphabetic characters only\nconst emailRegex = /^[a-zA-Z0-9_\\.\\-]*[@]?[a-zA-Z0-9-]*[\\.]?[a-zA-Z0-9-.]*$/;\nconst stringRegEx = /^([a-zA-Z0-9]+[_\\.\\-]?)+$/;\n\nconst InputValidationHelper = {\n    validateChar: (str) => {\n        return this.charRegEx.test(str);\n    },\n    validateString: (str) =>{\n        console.log(this.stringRegEx.test(str));\n        return this.stringRegEx.test(str);\n    },\n    validateEmail: (str) => {\n        return this.emailRegex.test(str);\n    },\n    validatePassword: (str) => {\n        if(str.length < 8){\n            return false;\n        }\n\n        return true;\n    },\n    validatePasswords: (str1, str2) => {\n        console.log(str1, str2);\n        if(str1 != str2){\n            return false;\n        }\n\n        return true;\n    },\n    encodeHTML: (s) => {\n        return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n    },\n}\n\nexport default InputValidationHelper;"]},"metadata":{},"sourceType":"module"}