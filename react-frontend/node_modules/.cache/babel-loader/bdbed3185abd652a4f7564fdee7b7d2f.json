{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\n\nconst RouteGuard = ({\n  component: Component,\n  user,\n  logout,\n  updateUser,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      switch (props.history.location.pathname) {\n        //If user is logged in trying to access the login page they get redirected to home page\n        case \"/login\":\n          return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            logout: logout,\n            updateUser: updateUser,\n            location: props.location.state = {\n              state: {\n                from: props.location\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 25\n            }\n          }));\n        //If user is not logged in they get redirected to login page\n\n        default:\n          return user ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 31\n            }\n          })) : /*#__PURE__*/React.createElement(Redirect, {\n            to: {\n              pathname: '/login',\n              state: {\n                from: props.location\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 31\n            }\n          });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RouteGuard;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js"],"names":["React","Route","Redirect","RouteGuard","component","Component","user","logout","updateUser","rest","props","history","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,UAAtC;AAAkD,KAAGC;AAArD,CAAD,KAAgE;AAC/E,sBACI,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAIC,KAAD,IAAW;AACjC,cAAQA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuBC,QAA/B;AACI;AACA,aAAK,QAAL;AACI,8BACI,oBAAC,SAAD,oBACQH,KADR;AAEI,YAAA,MAAM,EAAEH,MAFZ;AAGI,YAAA,UAAU,EAAEC,UAHhB;AAII,YAAA,QAAQ,EAAEE,KAAK,CAACE,QAAN,CAAeE,KAAf,GAAuB;AAC7BA,cAAAA,KAAK,EAAE;AACHC,gBAAAA,IAAI,EAAEL,KAAK,CAACE;AADT;AADsB,aAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAaJ;;AACA;AACI,iBACIN,IAAI,gBACE,oBAAC,SAAD,oBACMI,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,gBAIE,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAE;AACZG,cAAAA,QAAQ,EAAE,QADE;AAEZC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,IAAI,EAAEL,KAAK,CAACE;AADT;AAFK,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALV;AAlBR;AA+BH,KAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAmCH,CApCD;;AAsCA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\nconst RouteGuard = ({ component: Component, user, logout, updateUser, ...rest}) => {\n    return (\n        <Route {...rest} render={((props) => {\n            switch (props.history.location.pathname){\n                //If user is logged in trying to access the login page they get redirected to home page\n                case \"/login\":\n                    return (\n                        <Component \n                            {...props}\n                            logout={logout}\n                            updateUser={updateUser}\n                            location={props.location.state = {\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    )\n                \n                //If user is not logged in they get redirected to login page\n                default:\n                    return (\n                        user\n                            ? <Component \n                                {...props}\n                            />\n                            : <Redirect to={{\n                                pathname: '/login',\n                                state: {\n                                    from: props.location\n                                }\n                            }} />\n                    )\n            }\n        })} />\n    )\n}\n\nexport default RouteGuard;"]},"metadata":{},"sourceType":"module"}