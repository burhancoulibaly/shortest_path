{"ast":null,"code":"const charRegEx = /^[A-Za-z]+$/; //validates for alphabetic characters only\n\nconst emailRegex = /^[a-zA-Z0-9_.-]*[@]?[a-zA-Z0-9-]*[.]?[a-zA-Z0-9-.]*$/;\nconst stringRegEx = /^([a-zA-Z0-9]+[_.-]?)+$/;\nconst InputValidationHelper = {\n  validateChar: str => {\n    return charRegEx.test(str);\n  },\n  validateString: str => {\n    return stringRegEx.test(str);\n  },\n  validateEmail: str => {\n    return emailRegex.test(str);\n  },\n  validatePassword: str => {\n    if (str.length < 8) {\n      return false;\n    }\n\n    return true;\n  },\n  validatePasswords: (str1, str2) => {\n    console.log(str1, str2);\n\n    if (str1 !== str2) {\n      return false;\n    }\n\n    return true;\n  },\n  encodeHTML: s => {\n    return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n  }\n};\nexport default InputValidationHelper;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Helpers/InputValidationHelper.js"],"names":["charRegEx","emailRegex","stringRegEx","InputValidationHelper","validateChar","str","test","validateString","validateEmail","validatePassword","length","validatePasswords","str1","str2","console","log","encodeHTML","s","replace"],"mappings":"AAAA,MAAMA,SAAS,GAAG,aAAlB,C,CAAgC;;AAChC,MAAMC,UAAU,GAAG,sDAAnB;AACA,MAAMC,WAAW,GAAG,yBAApB;AAEA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,YAAY,EAAGC,GAAD,IAAS;AACnB,WAAOL,SAAS,CAACM,IAAV,CAAeD,GAAf,CAAP;AACH,GAHyB;AAI1BE,EAAAA,cAAc,EAAGF,GAAD,IAAQ;AACpB,WAAOH,WAAW,CAACI,IAAZ,CAAiBD,GAAjB,CAAP;AACH,GANyB;AAO1BG,EAAAA,aAAa,EAAGH,GAAD,IAAS;AACpB,WAAOJ,UAAU,CAACK,IAAX,CAAgBD,GAAhB,CAAP;AACH,GATyB;AAU1BI,EAAAA,gBAAgB,EAAGJ,GAAD,IAAS;AACvB,QAAGA,GAAG,CAACK,MAAJ,GAAa,CAAhB,EAAkB;AACd,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAhByB;AAiB1BC,EAAAA,iBAAiB,EAAE,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,IAAlB;;AACA,QAAGD,IAAI,KAAKC,IAAZ,EAAiB;AACb,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAxByB;AAyB1BG,EAAAA,UAAU,EAAGC,CAAD,IAAO;AACf,WAAOA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,OAAhB,EAAyBA,OAAzB,CAAiC,IAAjC,EAAuC,MAAvC,EAA+CA,OAA/C,CAAuD,IAAvD,EAA6D,QAA7D,CAAP;AACH;AA3ByB,CAA9B;AA8BA,eAAef,qBAAf","sourcesContent":["const charRegEx = /^[A-Za-z]+$/;//validates for alphabetic characters only\nconst emailRegex = /^[a-zA-Z0-9_.-]*[@]?[a-zA-Z0-9-]*[.]?[a-zA-Z0-9-.]*$/;\nconst stringRegEx = /^([a-zA-Z0-9]+[_.-]?)+$/;\n\nconst InputValidationHelper = {\n    validateChar: (str) => {\n        return charRegEx.test(str);\n    },\n    validateString: (str) =>{\n        return stringRegEx.test(str);\n    },\n    validateEmail: (str) => {\n        return emailRegex.test(str);\n    },\n    validatePassword: (str) => {\n        if(str.length < 8){\n            return false;\n        }\n\n        return true;\n    },\n    validatePasswords: (str1, str2) => {\n        console.log(str1, str2);\n        if(str1 !== str2){\n            return false;\n        }\n\n        return true;\n    },\n    encodeHTML: (s) => {\n        return s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n    },\n}\n\nexport default InputValidationHelper;"]},"metadata":{},"sourceType":"module"}