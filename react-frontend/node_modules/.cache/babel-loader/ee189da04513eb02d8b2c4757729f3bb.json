{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction EditMapModal({\n  mapName,\n  handleNameEdit,\n  ...props\n}) {\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, \"Set Map Name\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"editmap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mapname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, \"Map Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"mapname\",\n    className: \"form-control\",\n    id: \"mapname\",\n    \"aria-describedby\": \"mapNameHelp\",\n    type: \"text\",\n    defaultValue: mapName[mapName.length - 1],\n    placeholder: \"Unamed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleNameEdit(document.getElementsByClassName(\"editmap\")[0][0].value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Save Name\")));\n}\n\nfunction EditMapName({\n  mapName,\n  ...props\n}) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n    setModalShow(true);\n  };\n\n  const handleClose = () => {\n    setModalShow(false);\n  };\n\n  const handleNameEdit = mapName => {\n    handleClose();\n    dispatch({\n      type: \"mapName\",\n      payload: {\n        mapName: mapName\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Edit Map\"), /*#__PURE__*/React.createElement(EditMapModal, {\n    show: modalShow,\n    handleNameEdit: mapName => handleNameEdit(mapName),\n    mapName: menuState.mapName,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }));\n}\n\nfunction Account() {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    error: mapsError,\n    data: mapsData\n  } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n\n  const [maps, setMaps] = useState();\n  useEffect(() => {\n    if (mapsError) {\n      console.log(mapsError);\n    }\n\n    if (mapsData) {\n      console.log(mapsData.getUsersMaps);\n      setMaps(maps => {\n        return mapsData.getUsersMaps;\n      });\n    }\n  }, [user, mapsError, mapsData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, user.username), maps && maps.map((map, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"links-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Map Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"map-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/sandbox\",\n        state: {\n          userMap: map.map,\n          mapName: map.name\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, map.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, user && /*#__PURE__*/React.createElement(EditMapName, {\n      user: user,\n      mapName: map.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/sandbox\",\n        state: {\n          userMap: map.map,\n          mapName: map.name\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Edit Map\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, \"Delete Map\"))));\n  }));\n}\n\nexport default Account;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js"],"names":["React","useEffect","useContext","useState","UserContext","useQuery","MapHelper","Link","Modal","EditMapModal","mapName","handleNameEdit","props","length","document","getElementsByClassName","value","EditMapName","modalShow","setModalShow","handleShow","handleClose","dispatch","type","payload","menuState","Account","user","error","mapsError","data","mapsData","getUsersMaps","variables","username","maps","setMaps","console","log","map","index","pathname","state","userMap","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction EditMapModal({mapName, handleNameEdit, ...props}){\n  return (\n      <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n      >\n          <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                  Set Map Name\n              </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <form className=\"editmap\">\n                  <div className=\"form-group\">\n                      <label htmlFor=\"mapname\">Map Name</label>\n                      <input type=\"mapname\" className=\"form-control\" id=\"mapname\" aria-describedby=\"mapNameHelp\" type=\"text\" defaultValue={ mapName[mapName.length-1] } placeholder=\"Unamed\"/>\n                  </div>\n              </form>\n          </Modal.Body>\n          <Modal.Footer>\n              <button onClick={() => handleNameEdit(document.getElementsByClassName(\"editmap\")[0][0].value)}>Save Name</button>\n          </Modal.Footer>\n      </Modal>\n  );\n}\n\nfunction  EditMapName({mapName, ...props}){\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n      setModalShow(true);\n  }\n\n  const handleClose = () => {\n      setModalShow(false);\n  }\n\n  const handleNameEdit = (mapName) => {\n      handleClose();\n      dispatch({type: \"mapName\", payload: { mapName: mapName }});\n  }\n\n  return (\n      <>\n          <button className=\"btn btn-primary\">Edit Map</button>\n\n          <EditMapModal\n              show={modalShow}\n              handleNameEdit={(mapName) => handleNameEdit(mapName)}\n              mapName={menuState.mapName}\n              onHide={() => handleClose()}\n          />\n      </>\n  );\n}\n\nfunction Account() {\n  const {user} = useContext(UserContext);\n  const { error: mapsError, data: mapsData } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n  const [maps, setMaps] = useState(); \n\n  useEffect(() => {\n    if(mapsError){\n      console.log(mapsError);\n    }\n\n    if(mapsData){\n      console.log(mapsData.getUsersMaps);\n\n      setMaps((maps) => {\n        return mapsData.getUsersMaps;\n      })\n    }\n  }, [user, mapsError, mapsData]);\n\n  return (\n    <div id=\"account\">\n      {user &&\n        <h1>{user.username}</h1>\n      }\n\n      {maps && \n        maps.map((map, index) => {\n          return (\n            <div className=\"links-container\">\n              <div className=\"link-container\" key={index}>\n                <div className=\"map-preview\">\n                  Map Preview\n                </div>\n                <div class=\"map-info\">\n                  <Link to={{pathname: \"/sandbox\", state: { userMap: map.map, mapName: map.name }}}>\n                    <div>\n                        <h3>{map.name}</h3>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"map-edit\">\n                  { user &&\n                    <EditMapName \n                      user={user}\n                      mapName={map.name}\n                    />\n                  }\n                  <button className=\"btn btn-primary\">\n                    <Link to={{pathname: \"/sandbox\", state: { userMap: map.map, mapName: map.name }}}>\n                      Edit Map\n                    </Link>\n                  </button>\n                  <button className=\"btn btn-danger\">Delete Map</button>\n                </div>\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}