{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\n\nfunction EditMapName({\n  menuState,\n  dispatch,\n  ...props\n}) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n    setModalShow(true);\n  };\n\n  const handleClose = () => {\n    setModalShow(false);\n  };\n\n  const handleNameEdit = mapName => {\n    handleClose();\n    dispatch({\n      type: \"mapName\",\n      payload: {\n        mapName: mapName\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mapname\",\n    onClick: () => handleShow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, menuState.mapName.length > 0 ? menuState.mapName[menuState.mapName.length - 1] : \"Unamed\"), /*#__PURE__*/React.createElement(EditMapModal, {\n    show: modalShow,\n    handleNameEdit: mapName => handleNameEdit(mapName),\n    mapName: menuState.mapName,\n    onHide: () => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }));\n}\n\nfunction Account() {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    error: mapsError,\n    data: mapsData\n  } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n\n  const [maps, setMaps] = useState();\n  useEffect(() => {\n    if (mapsError) {\n      console.log(mapsError);\n    }\n\n    if (mapsData) {\n      console.log(mapsData.getUsersMaps);\n      setMaps(maps => {\n        return mapsData.getUsersMaps;\n      });\n    }\n  }, [user, mapsError, mapsData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, user.username), maps && maps.map((map, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"links-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Map Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"map-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/sandbox\",\n        state: {\n          userMap: map.map,\n          mapName: map.name\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, map.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, user && /*#__PURE__*/React.createElement(EditMapName, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/sandbox\",\n        state: {\n          userMap: map.map,\n          mapName: map.name\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Edit Map\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \"Delete Map\"))));\n  }));\n}\n\nexport default Account;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Account/Account.js"],"names":["React","useEffect","useContext","useState","UserContext","useQuery","MapHelper","Link","EditMapName","menuState","dispatch","props","modalShow","setModalShow","handleShow","handleClose","handleNameEdit","mapName","type","payload","length","Account","user","error","mapsError","data","mapsData","getUsersMaps","variables","username","maps","setMaps","console","log","map","index","pathname","state","userMap","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAAUC,WAAV,CAAsB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAZ;AAAsB,KAAGC;AAAzB,CAAtB,EAAsD;AACpD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,KAAK,CAACG,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACrBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,QAAMG,cAAc,GAAIC,OAAD,IAAa;AAChCF,IAAAA,WAAW;AACXL,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAE;AAAEF,QAAAA,OAAO,EAAEA;AAAX;AAA3B,KAAD,CAAR;AACH,GAHD;;AAKA,sBACI,uDACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAMH,UAAU,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,CAACQ,OAAV,CAAkBG,MAAlB,GAA2B,CAA3B,GAA+BX,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACQ,OAAV,CAAkBG,MAAlB,GAAyB,CAA3C,CAA/B,GAA+E,QADpF,CADJ,eAKI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAER,SADV;AAEI,IAAA,cAAc,EAAGK,OAAD,IAAaD,cAAc,CAACC,OAAD,CAF/C;AAGI,IAAA,OAAO,EAAER,SAAS,CAACQ,OAHvB;AAII,IAAA,MAAM,EAAE,MAAMF,WAAW,EAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAcD;;AAED,SAASM,OAAT,GAAmB;AACjB,QAAM;AAACC,IAAAA;AAAD,MAASpB,UAAU,CAACE,WAAD,CAAzB;AACA,QAAM;AAAEmB,IAAAA,KAAK,EAAEC,SAAT;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,MAAuCrB,QAAQ,CAACC,SAAS,CAACqB,YAAX,EAAyB;AAC5EC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAEP,IAAI,CAACO;AADN;AADiE,GAAzB,CAArD,CAFiB,CAMb;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGuB,SAAH,EAAa;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACD;;AAED,QAAGE,QAAH,EAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,YAArB;AAEAI,MAAAA,OAAO,CAAED,IAAD,IAAU;AAChB,eAAOJ,QAAQ,CAACC,YAAhB;AACD,OAFM,CAAP;AAGD;AACF,GAZQ,EAYN,CAACL,IAAD,EAAOE,SAAP,EAAkBE,QAAlB,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,iBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACO,QAAV,CAFJ,EAKGC,IAAI,IACHA,IAAI,CAACI,GAAL,CAAS,CAACA,GAAD,EAAMC,KAAN,KAAgB;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAEJ,GAAG,CAACA,GAAf;AAAoBjB,UAAAA,OAAO,EAAEiB,GAAG,CAACK;AAAjC;AAA9B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,GAAG,CAACK,IAAT,CADJ,CADF,CADF,CAJF,eAWE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIjB,IAAI,iBACF,oBAAC,WAAD;AACI,MAAA,IAAI,EAAEA,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CADF,eAQE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACc,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAEJ,GAAG,CAACA,GAAf;AAAoBjB,UAAAA,OAAO,EAAEiB,GAAG,CAACK;AAAjC;AAA9B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CARF,eAaE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,CAXF,CADF,CADF;AA+BD,GAhCD,CANJ,CADF;AA2CD;;AAED,eAAelB,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport './Account.css';\nimport UserContext from \"../UserContext\";\nimport { useQuery } from '@apollo/client';\nimport MapHelper from '../Helpers/MapHelper';\nimport { Link } from 'react-router-dom';\n\nfunction  EditMapName({menuState, dispatch, ...props}){\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const handleShow = () => {\n      setModalShow(true);\n  }\n\n  const handleClose = () => {\n      setModalShow(false);\n  }\n\n  const handleNameEdit = (mapName) => {\n      handleClose();\n      dispatch({type: \"mapName\", payload: { mapName: mapName }});\n  }\n\n  return (\n      <>\n          <h4 className=\"mapname\" onClick={() => handleShow()}>\n              {menuState.mapName.length > 0 ? menuState.mapName[menuState.mapName.length-1] : \"Unamed\"}\n          </h4>\n\n          <EditMapModal\n              show={modalShow}\n              handleNameEdit={(mapName) => handleNameEdit(mapName)}\n              mapName={menuState.mapName}\n              onHide={() => handleClose()}\n          />\n      </>\n  );\n}\n\nfunction Account() {\n  const {user} = useContext(UserContext);\n  const { error: mapsError, data: mapsData } = useQuery(MapHelper.getUsersMaps, {\n    variables: {\n      username: user.username\n    }\n  }); //{ fetchPolicy: \"network-only\" }\n  const [maps, setMaps] = useState(); \n\n  useEffect(() => {\n    if(mapsError){\n      console.log(mapsError);\n    }\n\n    if(mapsData){\n      console.log(mapsData.getUsersMaps);\n\n      setMaps((maps) => {\n        return mapsData.getUsersMaps;\n      })\n    }\n  }, [user, mapsError, mapsData]);\n\n  return (\n    <div id=\"account\">\n      {user &&\n        <h1>{user.username}</h1>\n      }\n\n      {maps && \n        maps.map((map, index) => {\n          return (\n            <div className=\"links-container\">\n              <div className=\"link-container\" key={index}>\n                <div className=\"map-preview\">\n                  Map Preview\n                </div>\n                <div class=\"map-info\">\n                  <Link to={{pathname: \"/sandbox\", state: { userMap: map.map, mapName: map.name }}}>\n                    <div>\n                        <h3>{map.name}</h3>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"map-edit\">\n                  <button className=\"btn btn-primary\">\n                    { user &&\n                        <EditMapName \n                            user={user}\n                        />\n                    }\n                  </button>\n                  <button className=\"btn btn-primary\">\n                    <Link to={{pathname: \"/sandbox\", state: { userMap: map.map, mapName: map.name }}}>\n                      Edit Map\n                    </Link>\n                  </button>\n                  <button className=\"btn btn-danger\">Delete Map</button>\n                </div>\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}