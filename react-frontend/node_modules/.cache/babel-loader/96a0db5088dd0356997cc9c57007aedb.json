{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\n\nconst RouteGuard = ({\n  component: Component,\n  user,\n  logout,\n  updateUser,\n  location,\n  ...rest\n}) => {\n  useEffect(() => {\n    console.log(\"User updated: \", user);\n  }, [user]);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      console.log(props);\n\n      switch (props.history.location.pathname) {\n        //If user is logged in trying to access the login page they get redirected to home page\n        case \"/login\":\n          return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            logout: logout,\n            updateUser: updateUser,\n            location: props.location.state,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }\n          }));\n        //If user is not logged in they get redirected to login page\n\n        default:\n          return user ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 31\n            }\n          })) : /*#__PURE__*/React.createElement(Redirect, {\n            to: {\n              pathname: '/login',\n              state: {\n                from: props.location\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 31\n            }\n          });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RouteGuard;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js"],"names":["React","useState","useEffect","Route","Redirect","RouteGuard","component","Component","user","logout","updateUser","location","rest","console","log","props","history","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,UAAtC;AAAkDC,EAAAA,QAAlD;AAA4D,KAAGC;AAA/D,CAAD,KAA0E;AACzFV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,IAA9B;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,KAAD,oBAAWI,IAAX;AAAiB,IAAA,MAAM,EAAIG,KAAD,IAAW;AACjCF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,cAAQA,KAAK,CAACC,OAAN,CAAcL,QAAd,CAAuBM,QAA/B;AACI;AACA,aAAK,QAAL;AACI,8BACI,oBAAC,SAAD,oBACQF,KADR;AAEI,YAAA,MAAM,EAAEN,MAFZ;AAGI,YAAA,UAAU,EAAEC,UAHhB;AAII,YAAA,QAAQ,EAAEK,KAAK,CAACJ,QAAN,CAAeO,KAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AASJ;;AACA;AACI,iBACIV,IAAI,gBACE,oBAAC,SAAD,oBACMO,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,gBAIE,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAE;AACZE,cAAAA,QAAQ,EAAE,QADE;AAEZC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,IAAI,EAAEJ,KAAK,CAACJ;AADT;AAFK,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALV;AAdR;AA2BH,KA7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAgCH,CArCD;;AAuCA,eAAeN,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\nconst RouteGuard = ({ component: Component, user, logout, updateUser, location, ...rest}) => {\n    useEffect(() => {\n        console.log(\"User updated: \", user)\n    }, [user]);\n\n    return (\n        <Route {...rest} render={((props) => {\n            console.log(props)\n            switch (props.history.location.pathname){\n                //If user is logged in trying to access the login page they get redirected to home page\n                case \"/login\":\n                    return (\n                        <Component \n                            {...props}\n                            logout={logout}\n                            updateUser={updateUser}\n                            location={props.location.state}\n                        />\n                    )\n                \n                //If user is not logged in they get redirected to login page\n                default:\n                    return (\n                        user\n                            ? <Component \n                                {...props}\n                            />\n                            : <Redirect to={{\n                                pathname: '/login',\n                                state: {\n                                    from: props.location\n                                }\n                            }} />\n                    )\n            }\n        })} />\n    )\n}\n\nexport default RouteGuard;"]},"metadata":{},"sourceType":"module"}