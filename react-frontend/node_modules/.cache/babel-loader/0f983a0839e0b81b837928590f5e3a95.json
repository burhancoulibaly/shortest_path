{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Helpers/AuthHelper';\nimport InputValidationHelper from '../Helpers/InputValidationHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom';\nimport UserContext from \"../UserContext\"; //Todo move this function to its own file\n//Returns login form based on login tab\n\nconst LoginForm = props => {\n  const [inputLoginState, setInputLoginState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\"\n  });\n  const [inputSignUpState, setInputSignUpState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\",\n    isEmailValid: true,\n    emailErrorMessage: \"\",\n    isPasswordValid: true,\n    passwordErrorMessage: \"\",\n    passwordsMatch: true,\n    passwordMatchErrorMessage: \"\"\n  });\n  const [inputGuestState, setInputGuestState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\"\n  });\n\n  const validateGuest = (e, username) => {\n    const isUsernameValid = InputValidationHelper.validateUsername(username);\n    console.log(isUsernameValid);\n    setInputGuestState({ ...inputGuestState,\n      isUsernameValid: isUsernameValid,\n      usernameErrorMessage: !isUsernameValid ? \"Enter a valid username\" : \"\"\n    });\n\n    if (isUsernameValid) {\n      e.preventDefault();\n      props.guest({\n        variables: {\n          username: username\n        }\n      });\n    }\n  };\n\n  if (props.loginTab === \"login\") {\n    const validateLogin = (e, username, password) => {\n      const isUsernameValid = InputValidationHelper.validateUsername(username);\n      console.log(isUsernameValid);\n      setInputLoginState({ ...inputLoginState,\n        isUsernameValid: isUsernameValid,\n        usernameErrorMessage: !isUsernameValid ? \"Enter a valid username\" : \"\"\n      });\n\n      if (isUsernameValid) {\n        e.preventDefault();\n        props.login({\n          variables: {\n            username: username,\n            password: password\n          }\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, props.loginState === \"system-error\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }, \"Unable to log you in at this time\"), props.loginState === \"invalid-login\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 50\n      }\n    }, \"Invalid login credentials\"), !inputLoginState.isUsernameValid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 46\n      }\n    }, inputLoginState.usernameErrorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"loginUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      className: (!inputLoginState.isUsernameValid ? \"error\" : \"\") + \" form-control\",\n      id: \"loginUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"loginPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"loginPassword\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: e => validateLogin(e, e.target.form.elements[0].value, e.target.form.elements[1].value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n  if (props.loginTab === \"signup\") {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, props.loginState === \"system-error\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 49\n      }\n    }, \"Unable to register you in at this time\"), props.loginState === \"existing-account\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 53\n      }\n    }, \"Account with this username already exist\"), props.loginState === \"existing-email\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 51\n      }\n    }, \"Account with this email already exist\"), !inputSignUpState.isUsernameValid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 47\n      }\n    }, inputSignUpState.usernameErrorMessage), !inputSignUpState.isEmailValid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 44\n      }\n    }, inputSignUpState.emailErrorMessage), !inputSignUpState.isPasswordValid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 47\n      }\n    }, inputSignUpState.passwordErrorMessage), !inputSignUpState.passwordMatch && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, inputSignUpState.passwordMatchErrorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"signupUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      className: (!inputSignUpState.isUsernameValid ? \"error\" : \"\") + \" form-control\",\n      id: \"signupUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"signupEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: (!inputSignUpState.isEmailValid ? \"error\" : \"\") + \" form-control\",\n      id: \"signupEmail\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"signupPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: (!inputSignUpState.isPasswordValid || !inputSignUpState.passwordsMatch ? \"error\" : \"\") + \" form-control\",\n      id: \"signupPassword1\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"signupPassword2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: (!inputSignUpState.isPasswordValid || !inputSignUpState.passwordsMatch ? \"error\" : \"\") + \" form-control\",\n      id: \"signupPassword2\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: e => validateSignUp(e, e.target.form.elements[0].value, e.target.form.elements[1].value, e.target.form.elements[2].value, e.target.form.elements[3].value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n  if (props.loginTab === \"guest\") {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"guest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, props.loginState === \"system-error\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 49\n      }\n    }, \"Unable to log you in at this time\"), props.loginState === \"invalid-login\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 50\n      }\n    }, \"Invalid Login\"), props.loginState === \"existing-account\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 53\n      }\n    }, \"Existing account\"), !inputGuestState.isUsernameValid && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 46\n      }\n    }, inputGuestState.usernameErrorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"guestUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      className: (!inputGuestState.isUsernameValid ? \"error\" : \"\") + \" form-control\",\n      id: \"guestUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: e => validateGuest(e, e.target.form.elements[0].value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n};\n\nfunction LoginPage(props) {\n  //Login tab state variable\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [loginTab, setLoginTab] = useState(\"login\");\n  const [loginState, setLoginState] = useState(\"\");\n  const [login, {\n    error: loginError,\n    data: loginData\n  }] = useLazyQuery(AuthHelper.login, {\n    fetchPolicy: \"network-only\"\n  });\n  const [guest, {\n    error: guestError,\n    data: guestData\n  }] = useMutation(AuthHelper.guest);\n  const [signup, {\n    error: signupError,\n    data: signupData\n  }] = useMutation(AuthHelper.signup); //Only rerenders on changes\n\n  useEffect(() => {\n    // <--------------------------------GUEST--------------------------------> \n    if (guestError) {\n      console.log(guestError);\n      props.updateUser(guestError, setUser);\n      props.logout(setUser);\n      setLoginState(\"system-error\");\n      return;\n    }\n\n    ;\n\n    if (guestData) {\n      if (!guestData.guest.response_type.includes(\"Error\")) {\n        // console.log(guestData.guest);\n        props.updateUser(guestData.guest, setUser);\n        setLoginState(\"success\");\n        return;\n      }\n\n      ;\n      console.log(guestData);\n      props.updateUser(guestData, setUser);\n      props.logout(setUser);\n\n      if (guestData.guest.response === \"Account already exist\") {\n        setLoginState(\"existing-account\");\n      } else {\n        setLoginState(\"invalid-login\");\n      }\n\n      return;\n    }\n\n    ; // <--------------------------------SIGNUP-------------------------------->\n\n    if (signupError) {\n      console.log(signupError);\n      props.updateUser(signupError, setUser);\n      props.logout(setUser);\n      setLoginState(\"system-error\");\n      return;\n    }\n\n    ;\n\n    if (signupData) {\n      if (!signupData.register.response_type.includes(\"Error\")) {\n        // console.log(signupData.register);\n        props.updateUser(signupData.register, setUser);\n        setLoginState(\"success\");\n        return;\n      }\n\n      ;\n      console.log(signupData);\n      props.updateUser(signupData, setUser);\n      props.logout(setUser);\n\n      if (signupData.register.response === \"Account already exist\") {\n        setLoginState(\"existing-account\");\n      } else {\n        setLoginState(\"invalid-login\");\n      }\n\n      return;\n    }\n\n    ; // <--------------------------------LOGIN-------------------------------->\n\n    if (loginError) {\n      console.log(loginError);\n      props.updateUser(loginError, setUser);\n      props.logout(setUser);\n      setLoginState(\"system-error\");\n      return;\n    }\n\n    ;\n\n    if (loginData) {\n      if (!loginData.login.response_type.includes(\"Error\")) {\n        // console.log(loginData.login);\n        props.updateUser(loginData.login, setUser);\n        setLoginState(\"success\");\n        return;\n      }\n\n      ;\n      console.log(loginData.login);\n      props.updateUser(loginData.login, setUser);\n      props.logout(setUser);\n      setLoginState(\"invalid-login\");\n      return;\n    }\n\n    ;\n  }, [loginError, loginData, signupError, signupData, guestError, guestData, setUser, props]); // <--------------------------------RENDERFORM-------------------------------->\n\n  const renderForm = () => {\n    return /*#__PURE__*/React.createElement(LoginForm, {\n      loginTab: loginTab,\n      loginState: loginState,\n      login: login,\n      signup: signup,\n      guest: guest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }\n    });\n  }; //Change login window tab\n\n\n  const changeLoginTab = (e, loginOption) => {\n    // see if this becomes a problem later\n    document.forms[0].reset();\n    setLoginState(\"\");\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    allLoginButtons.forEach(button => {\n      button.classList.remove(\"active\");\n    });\n    e.target.closest(\"button\").classList.add(\"active\");\n    return loginOption;\n  }; // <--------------------------------HTML-------------------------------->\n\n\n  if (loginState === \"success\") {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (user) {\n    if (props.location.state) {\n      if (props.location.state.from.pathname === \"/login\") {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: props.location.state.from.pathname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, renderForm(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login-btn btn active\",\n    onClick: $event => setLoginTab(changeLoginTab($event, `login`)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signup-btn btn\",\n    onClick: $event => setLoginTab(changeLoginTab($event, `signup`)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"guest-btn btn\",\n    onClick: $event => setLoginTab(changeLoginTab($event, `guest`)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, \"Guest\"))))));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Login Page/LoginPage.js"],"names":["React","useState","useEffect","useContext","AuthHelper","InputValidationHelper","useLazyQuery","useMutation","Redirect","UserContext","LoginForm","props","inputLoginState","setInputLoginState","isUsernameValid","usernameErrorMessage","inputSignUpState","setInputSignUpState","isEmailValid","emailErrorMessage","isPasswordValid","passwordErrorMessage","passwordsMatch","passwordMatchErrorMessage","inputGuestState","setInputGuestState","validateGuest","e","username","validateUsername","console","log","preventDefault","guest","variables","loginTab","validateLogin","password","login","loginState","target","form","elements","value","passwordMatch","validateSignUp","LoginPage","user","setUser","setLoginTab","setLoginState","error","loginError","data","loginData","fetchPolicy","guestError","guestData","signup","signupError","signupData","updateUser","logout","response_type","includes","response","register","renderForm","changeLoginTab","loginOption","document","forms","reset","allLoginButtons","getElementsByClassName","childNodes","forEach","button","classList","remove","closest","add","location","state","from","pathname","$event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport AuthHelper from '../Helpers/AuthHelper';\nimport InputValidationHelper from '../Helpers/InputValidationHelper';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { Redirect } from 'react-router-dom'\nimport UserContext from \"../UserContext\";\n\n//Todo move this function to its own file\n//Returns login form based on login tab\nconst LoginForm = (props) => {\n  const [inputLoginState, setInputLoginState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\",\n  })\n  const [inputSignUpState, setInputSignUpState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\",\n    isEmailValid: true,\n    emailErrorMessage: \"\",\n    isPasswordValid: true,\n    passwordErrorMessage: \"\",\n    passwordsMatch: true,\n    passwordMatchErrorMessage: \"\",\n  })\n  const [inputGuestState, setInputGuestState] = useState({\n    isUsernameValid: true,\n    usernameErrorMessage: \"\",\n  })\n\n  const validateGuest = (e, username) => {\n    const isUsernameValid = InputValidationHelper.validateUsername(username);\n\n    console.log(isUsernameValid)\n    setInputGuestState({\n      ...inputGuestState,\n      isUsernameValid: isUsernameValid,\n      usernameErrorMessage: !isUsernameValid ? \"Enter a valid username\" : \"\",\n    })\n\n    if(isUsernameValid){\n      e.preventDefault();\n\n      props.guest({\n        variables: {\n          username: username,\n        }\n      })\n    }\n  }\n\n  if(props.loginTab === \"login\"){\n    const validateLogin = (e, username, password) => {\n      const isUsernameValid = InputValidationHelper.validateUsername(username);\n  \n      console.log(isUsernameValid)\n      setInputLoginState({\n        ...inputLoginState,\n        isUsernameValid: isUsernameValid,\n        usernameErrorMessage: !isUsernameValid ? \"Enter a valid username\" : \"\",\n      })\n  \n      if(isUsernameValid){\n        e.preventDefault();\n  \n        props.login({\n          variables: {\n            username: username,\n            password: password\n          }\n        })\n      }\n    }\n\n    return (\n      <form className=\"login\">\n        {props.loginState === \"system-error\" && <p className=\"error-text\">Unable to log you in at this time</p>}\n        {props.loginState === \"invalid-login\" && <p className=\"error-text\">Invalid login credentials</p>}\n        {!inputLoginState.isUsernameValid && <div className=\"error-text\">{inputLoginState.usernameErrorMessage}</div>}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"loginUsername\">Username</label>\n          <input type=\"username\" className={(!inputLoginState.isUsernameValid ? \"error\" : \"\") + \" form-control\"} id=\"loginUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"loginPassword\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"loginPassword\" placeholder=\"Password\"></input>\n        </div>\n        <br></br>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => validateLogin(e, e.target.form.elements[0].value, e.target.form.elements[1].value)}>Submit</button>\n      </form>\n    );\n  }\n\n  if(props.loginTab === \"signup\"){\n    return (\n      <form className=\"signup\">\n        {props.loginState === \"system-error\" && <p className=\"error-text\">Unable to register you in at this time</p>}\n        {props.loginState === \"existing-account\" && <p className=\"error-text\">Account with this username already exist</p>}\n        {props.loginState === \"existing-email\" && <p className=\"error-text\">Account with this email already exist</p>}\n        {!inputSignUpState.isUsernameValid && <div className=\"error-text\">{inputSignUpState.usernameErrorMessage}</div>}\n        {!inputSignUpState.isEmailValid && <div className=\"error-text\">{inputSignUpState.emailErrorMessage}</div>}\n        {!inputSignUpState.isPasswordValid && <div className=\"error-text\">{inputSignUpState.passwordErrorMessage}</div>}\n        {!inputSignUpState.passwordMatch && <div className=\"error-text\">{inputSignUpState.passwordMatchErrorMessage}</div>}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signupUsername\">Username</label>\n          <input type=\"username\" className={(!inputSignUpState.isUsernameValid ? \"error\" : \"\") + \" form-control\"} id=\"signupUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"signupEmail\">Email address</label>\n          <input type=\"email\" className={(!inputSignUpState.isEmailValid ? \"error\" : \"\") + \" form-control\"} id=\"signupEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\"></input>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"password\">\n          <div className=\"form-group\">\n            <label htmlFor=\"signupPassword1\">Password</label>\n            <input type=\"password\" className={(!inputSignUpState.isPasswordValid || !inputSignUpState.passwordsMatch ? \"error\" : \"\") + \" form-control\"} id=\"signupPassword1\" placeholder=\"Password\"></input>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"signupPassword2\">Confirm Password</label>\n            <input type=\"password\" className={(!inputSignUpState.isPasswordValid || !inputSignUpState.passwordsMatch ? \"error\" : \"\") + \" form-control\"} id=\"signupPassword2\" placeholder=\"Confirm Password\"></input>\n          </div>\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => validateSignUp(e, e.target.form.elements[0].value, e.target.form.elements[1].value, e.target.form.elements[2].value, e.target.form.elements[3].value)}>Submit</button>\n      </form>\n    );\n  }\n\n  if(props.loginTab === \"guest\"){\n    return (\n      <form className=\"guest\">\n        {props.loginState === \"system-error\" && <p className=\"error-text\">Unable to log you in at this time</p>}\n        {props.loginState === \"invalid-login\" && <p className=\"error-text\">Invalid Login</p>}\n        {props.loginState === \"existing-account\" && <p className=\"error-text\">Existing account</p>}\n        {!inputGuestState.isUsernameValid && <div className=\"error-text\">{inputGuestState.usernameErrorMessage}</div>}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"guestUsername\">Username</label>\n          <input type=\"username\" className={(!inputGuestState.isUsernameValid ? \"error\" : \"\") + \" form-control\"} id=\"guestUsername\" aria-describedby=\"usernameHelp\" placeholder=\"Enter Username\"></input>\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => validateGuest(e, e.target.form.elements[0].value)}>Submit</button>\n      </form>\n    );\n  }\n};\n\nfunction LoginPage(props) {\n  //Login tab state variable\n  const {user, setUser} = useContext(UserContext);\n  const [loginTab, setLoginTab] = useState(\"login\");\n  const [loginState, setLoginState] = useState(\"\");\n  const [login, { error: loginError, data: loginData }] = useLazyQuery(AuthHelper.login, { fetchPolicy: \"network-only\" });\n  const [guest, { error: guestError, data: guestData }] = useMutation(AuthHelper.guest);\n  const [signup, { error: signupError, data: signupData }] = useMutation(AuthHelper.signup);\n\n  //Only rerenders on changes\n  useEffect(() => { \n    // <--------------------------------GUEST--------------------------------> \n    if(guestError){\n      console.log(guestError);\n\n      props.updateUser(guestError, setUser);\n\n      props.logout(setUser);\n  \n      setLoginState(\"system-error\");\n\n      return;\n    };\n  \n    if(guestData){\n      if(!guestData.guest.response_type.includes(\"Error\")){\n        // console.log(guestData.guest);\n\n        props.updateUser(guestData.guest, setUser);\n        \n        setLoginState(\"success\");\n\n        return;\n      };\n  \n      console.log(guestData);\n\n      props.updateUser(guestData, setUser);\n\n      props.logout(setUser);\n\n      if(guestData.guest.response === \"Account already exist\"){\n        setLoginState(\"existing-account\");\n      }else{\n        setLoginState(\"invalid-login\");\n      }\n      \n      return;\n    };\n\n\n    // <--------------------------------SIGNUP-------------------------------->\n\n    if(signupError){\n      console.log(signupError);\n\n      props.updateUser(signupError, setUser);\n\n      props.logout(setUser);\n  \n      setLoginState(\"system-error\");\n\n      return;\n    };\n  \n    if(signupData){\n      if(!signupData.register.response_type.includes(\"Error\")){\n        // console.log(signupData.register);\n\n        props.updateUser(signupData.register, setUser);\n        \n        setLoginState(\"success\");\n\n        return;\n      };\n  \n      console.log(signupData);\n\n      props.updateUser(signupData, setUser);\n\n      props.logout(setUser);\n\n      if(signupData.register.response === \"Account already exist\"){\n        setLoginState(\"existing-account\");\n      }else{\n        setLoginState(\"invalid-login\");\n      }\n      \n      return;\n    };\n\n\n    // <--------------------------------LOGIN-------------------------------->\n  \n    if(loginError){\n      console.log(loginError);\n      \n      props.updateUser(loginError, setUser);\n\n      props.logout(setUser);\n      \n      setLoginState(\"system-error\");\n\n      return;\n    };\n  \n    if(loginData){\n      if(!loginData.login.response_type.includes(\"Error\")){\n        // console.log(loginData.login);\n        \n        props.updateUser(loginData.login, setUser);\n\n        setLoginState(\"success\");\n\n        return;\n      };\n\n  \n      console.log(loginData.login);\n\n      props.updateUser(loginData.login, setUser);\n\n      props.logout(setUser);\n\n      setLoginState(\"invalid-login\");\n\n      return;\n    };\n  }, [loginError, loginData, signupError, signupData, guestError, guestData, setUser, props])\n\n\n  // <--------------------------------RENDERFORM-------------------------------->\n\n  const renderForm = () => {\n    return (\n      <LoginForm \n        loginTab={loginTab}\n        loginState={loginState}\n        login={login}\n        signup={signup}\n        guest={guest}\n      />\n    )\n  }\n\n  //Change login window tab\n  const changeLoginTab = (e, loginOption) => {\n    // see if this becomes a problem later\n    document.forms[0].reset();\n\n    setLoginState(\"\");\n\n    let allLoginButtons = document.getElementsByClassName(\"login-options\")[0].childNodes;\n    \n    allLoginButtons.forEach((button) => {\n      button.classList.remove(\"active\");\n    });\n\n    e.target.closest(\"button\").classList.add(\"active\");\n\n    return loginOption;\n  }\n\n  // <--------------------------------HTML-------------------------------->\n  if(loginState === \"success\"){\n    return <Redirect to='/home' />\n  }\n\n  if(user){\n    if(props.location.state){\n      if(props.location.state.from.pathname === \"/login\"){\n        return <Redirect to=\"/home\" />\n      }\n\n      return <Redirect to={props.location.state.from.pathname} />\n    }\n  }\n\n  return (\n    <div id=\"login-page\">\n      <div className=\"login-container\">\n        <div className=\"login-form\">\n          {/* Login form */}\n          {renderForm()}\n          \n          <div className=\"login-options\">\n            <button className=\"login-btn btn active\" onClick={($event) => setLoginTab(changeLoginTab($event, `login`))}>\n              <h1>Login</h1>\n            </button>\n            <button className=\"signup-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `signup`))}>\n              <h1>Sign Up</h1>\n            </button>\n            <button className=\"guest-btn btn\" onClick={($event) => setLoginTab(changeLoginTab($event, `guest`))}>\n              <h1>Guest</h1>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}