{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\n\nconst RouteGuard = ({\n  component: Component,\n  user,\n  logout,\n  updateUser,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      user ? user === \"loading\" ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        logout: !props.history.location.pathname === \"/login\" ? logout : null,\n        updateUser: updateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 23\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RouteGuard;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/RouteGuard.js"],"names":["React","Route","Redirect","RouteGuard","component","Component","user","logout","updateUser","rest","props","height","display","justifyContent","alignItems","history","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA,UAAtC;AAAkD,KAAGC;AAArD,CAAD,KAAgE;AAC/E,sBACI,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAIC,KAAD,IAAW;AACjCJ,MAAAA,IAAI,GACEA,IAAI,KAAK,SAAT,gBACI;AAAK,QAAA,KAAK,EAAE;AAACK,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,OAAO,EAAC,MAAzB;AAAiCC,UAAAA,cAAc,EAAE,QAAjD;AAA2DC,UAAAA,UAAU,EAAE;AAAvE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,gBAEI,oBAAC,SAAD,oBACMJ,KADN;AAEE,QAAA,MAAM,EAAE,CAACA,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,QAAxB,KAAqC,QAArC,GAAgDV,MAAhD,GAAyD,IAFnE;AAGE,QAAA,UAAU,EAAEC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHN,gBAQE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZS,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAET,KAAK,CAACM;AAAd;AAFK,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARN;AAYH,KAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAgBH,CAjBD;;AAmBA,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//Passing component as Component for rendering as component, and ..rest as all other passed variables\n//TODO: Fix bug where route guard runs before the user is populated causing the app to redirect to login then redirect to home on refreshes\nconst RouteGuard = ({ component: Component, user, logout, updateUser, ...rest}) => {\n    return (\n        <Route {...rest} render={((props) => {\n            user\n                ? user === \"loading\"\n                    ? <div style={{height: \"100%\", display:\"flex\", justifyContent: \"center\", alignItems: \"center\"}}></div>\n                    : <Component \n                        {...props}\n                        logout={!props.history.location.pathname === \"/login\" ? logout : null}\n                        updateUser={updateUser}\n                    />\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: props.location }\n                }} />\n        })} />\n    )\n}\n\nexport default RouteGuard;"]},"metadata":{},"sourceType":"module"}