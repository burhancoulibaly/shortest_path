{"ast":null,"code":"var _jsxFileName = \"/home/menekou/projects/react/shortest-path/react-frontend/src/Routes.js\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apolloClient from './ApolloConfig';\nimport LoginPage from './Login Page/LoginPage';\nimport Home from './Home/Home';\nimport App from './App/App';\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport UserContext from './UserContext';\nimport RouteGuard from './RouteGuard';\nimport TopNav from \"./TopNav/TopNav\";\n\nfunction Routes() {\n  const [user, setUser] = useState();\n  console.log(user);\n\n  const LoginContainer = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RouteGuard, {\n      path: \"/login\",\n      component: LoginPage,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const DefaultContainer = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TopNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(RouteGuard, {\n      path: \"/app\",\n      component: App,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(RouteGuard, {\n      path: \"/home\",\n      component: Home,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  axios.interceptors.request.use(function (request) {\n    request.headers[\"Content-Type\"] = 'application/json; charset=utf-8';\n    request.headers[\"Accept\"] = 'application/json';\n    request.headers[\"authorization\"] = user ? `Bearer ${user.accessToken}` : \"\";\n    request.withCredentials = true;\n    return request;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  const value = useMemo(() => [user, setUser], [user, setUser]);\n  useEffect(() => {\n    const updateUser = userData => {\n      if (!userData.accessToken) {\n        setUser(null);\n        return;\n      }\n\n      setUser({\n        username: userData.username,\n        role: userData.role,\n        accessToken: userData.accessToken\n      });\n      return;\n    };\n\n    axios.get(\"http://localhost:3000/refreshToken\").then(response => {\n      updateUser(response.data);\n      return;\n    }).catch(error => {\n      console.log(error.data);\n      return;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: LoginContainer,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: DefaultContainer,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })))));\n}\n\n;\nexport default Routes;","map":{"version":3,"sources":["/home/menekou/projects/react/shortest-path/react-frontend/src/Routes.js"],"names":["React","useState","useMemo","useEffect","axios","apolloClient","LoginPage","Home","App","ApolloProvider","BrowserRouter","Router","Switch","Route","Redirect","UserContext","RouteGuard","TopNav","Routes","user","setUser","console","log","LoginContainer","DefaultContainer","interceptors","request","use","headers","accessToken","withCredentials","error","Promise","reject","value","updateUser","userData","username","role","get","then","response","data","catch"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apolloClient from './ApolloConfig'\nimport LoginPage from './Login Page/LoginPage';\nimport Home from './Home/Home';\nimport App from './App/App';\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport UserContext from './UserContext';\nimport RouteGuard from './RouteGuard';\nimport TopNav from \"./TopNav/TopNav\";\n\nfunction Routes() {\n    const [user, setUser] = useState();\n\n    console.log(user);\n\n    const LoginContainer = () => {\n    return(\n        <div>\n            <RouteGuard \n                path=\"/login\" \n                component={LoginPage}\n                user={user}\n            />\n        </div>\n    )\n}\n\nconst DefaultContainer = () => {\n    return(\n        <div>\n            <TopNav />\n            <Route exact={true} path=\"/\"><Redirect to=\"/home\"/></Route>\n            <RouteGuard \n                path='/app' \n                component={App} \n                user={user} \n            />\n            <RouteGuard \n                path='/home' \n                component={Home} \n                user={user} \n            />\n        </div>\n    )\n}\n\n    axios.interceptors.request.use(\n        function(request) {\n            request.headers[\"Content-Type\"] = 'application/json; charset=utf-8';\n            request.headers[\"Accept\"] = 'application/json';\n            request.headers[\"authorization\"] = user ? `Bearer ${user.accessToken}` : \"\";\n            request.withCredentials = true;\n            return request;\n        },\n        function(error) {\n            return Promise.reject(error);\n        }\n    );\n\n    const value = useMemo(() => ([user, setUser]), [user, setUser]);\n\n    useEffect(() => {\n        const updateUser = (userData) => {\n            if(!userData.accessToken){\n                setUser(null);\n\n                return;\n            }\n\n            setUser({\n              username: userData.username,\n              role: userData.role,\n              accessToken: userData.accessToken\n            })\n        \n            return;\n        }\n\n        axios.get(\"http://localhost:3000/refreshToken\")\n            .then((response) => {\n                updateUser(response.data);\n\n                return;\n            })\n            .catch((error) => {\n                console.log(error.data);\n                 return;\n            });\n    }, []);\n\n    return (\n        <Router>\n            <UserContext.Provider value={value}>\n                <ApolloProvider client={apolloClient}>\n                    <Switch>\n                        <Route \n                            exact \n                            path=\"/login\" \n                            component={LoginContainer}\n                            user={user}\n                        />\n                        <Route \n                            component={DefaultContainer}\n                            user={user}\n                        />\n                    </Switch>\n                </ApolloProvider>\n            </UserContext.Provider>\n        </Router>\n    );\n};\nexport default Routes;"]},"metadata":{},"sourceType":"module"}